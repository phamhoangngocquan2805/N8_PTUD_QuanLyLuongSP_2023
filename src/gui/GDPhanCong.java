/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import dao.BangPhanCong_DAO;
import dao.ChiTietBangChamCong_DAO;
import dao.CongDoan_DAO;
import dao.CongNhan_DAO;
import dao.SanPham_DAO;
import entity.BangPhanCong;
import entity.CongDoan;
import entity.CongNhan;
import entity.SanPham;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author acer
 */
public class GDPhanCong extends javax.swing.JPanel {

    private BangPhanCong_DAO phanCong_Dao;
    private CongNhan_DAO congNhan_Dao;
    private CongDoan_DAO congDoan_Dao;
    private SanPham_DAO sanPham_Dao;
    private ChiTietBangChamCong_DAO ctBangCC_Dao;

    private Boolean processEvent = true;

    private DefaultTableModel modelDSCN;
    private DefaultTableModel modelPhanCong;
    private DefaultTableModel modelCongDoan;
    private DefaultComboBoxModel<String> modelcbbCongDoan;
    private DefaultComboBoxModel<String> modelcbbSanPham2;

    /**
     * Creates new form GDPhanCong
     */
    public GDPhanCong() {
        phanCong_Dao = new BangPhanCong_DAO();
        congDoan_Dao = new CongDoan_DAO();
        congNhan_Dao = new CongNhan_DAO();
        sanPham_Dao = new SanPham_DAO();
        initComponents();
        addCBB();
        addListPhanCong();
        String CongDoan = modelcbbCongDoan.getElementAt(1);
        int indexCD = CongDoan.indexOf("-");
        addListCN(CongDoan.substring(0, indexCD));
        addListCD(CongDoan.substring(0, indexCD));
        cbbTimTheoSP.setSelectedIndex(1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comfirmDelete = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        lbttCN = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnHuyXoa = new javax.swing.JButton();
        btnXacNhanXoa = new javax.swing.JButton();
        lbXacNhanXoa = new javax.swing.JLabel();
        pPhanCong = new javax.swing.JPanel();
        pTittle = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        pTongQuan = new javax.swing.JPanel();
        scrollDSCN = new javax.swing.JScrollPane();
        tableCongDoan = new javax.swing.JTable();
        scrollCD = new javax.swing.JScrollPane();
        tableCongNhan = new javax.swing.JTable();
        panelThongTin = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMaCN = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtHoTenCN = new javax.swing.JTextField();
        txtTenCD = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtMaCD = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        panelXuLy = new javax.swing.JPanel();
        btnLamMoi = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnXacNhan = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        lbThongBao = new javax.swing.JLabel();
        scrollDSPhanCong = new javax.swing.JScrollPane();
        tableDSPhanCong = new javax.swing.JTable();
        cbbTimTheoSP = new javax.swing.JComboBox<>();
        panelLocTheo = new javax.swing.JPanel();
        cbbCongDoan = new javax.swing.JComboBox<>();
        cbbTayNghe = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        btnXemPC = new javax.swing.JButton();
        dateCBD = new com.toedter.calendar.JDateChooser();

        comfirmDelete.setTitle("Xác nhận xóa");
        comfirmDelete.setAlwaysOnTop(true);
        comfirmDelete.setFocusTraversalPolicyProvider(true);
        comfirmDelete.setLocation(new java.awt.Point(540, 280));
        comfirmDelete.setModal(true);
        comfirmDelete.setSize(new java.awt.Dimension(340, 250));

        lbttCN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbttCN.setText("Họ tên công nhân A - Mã công nhân");
        lbttCN.setPreferredSize(new java.awt.Dimension(340, 30));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lbttCN, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbttCN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setPreferredSize(new java.awt.Dimension(340, 220));

        btnHuyXoa.setBackground(new java.awt.Color(255, 102, 102));
        btnHuyXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnHuyXoa.setText("Hủy");
        btnHuyXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyXoaActionPerformed(evt);
            }
        });

        btnXacNhanXoa.setBackground(new java.awt.Color(255, 102, 102));
        btnXacNhanXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXacNhanXoa.setLabel("Xác nhận");
        btnXacNhanXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanXoaActionPerformed(evt);
            }
        });

        lbXacNhanXoa.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbXacNhanXoa.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbXacNhanXoa.setText("Bạn có chắc muốn xóa ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(btnXacNhanXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnHuyXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbXacNhanXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(lbXacNhanXoa, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXacNhanXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHuyXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout comfirmDeleteLayout = new javax.swing.GroupLayout(comfirmDelete.getContentPane());
        comfirmDelete.getContentPane().setLayout(comfirmDeleteLayout);
        comfirmDeleteLayout.setHorizontalGroup(
            comfirmDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
        comfirmDeleteLayout.setVerticalGroup(
            comfirmDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(comfirmDeleteLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pPhanCong.setBackground(new java.awt.Color(255, 255, 255));
        pPhanCong.setPreferredSize(new java.awt.Dimension(958, 735));

        pTittle.setBackground(new java.awt.Color(85, 167, 222));
        pTittle.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 5, 0, 0, new java.awt.Color(233, 231, 231)));

        jLabel15.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(234, 233, 233));
        jLabel15.setText("PHÂN CÔNG CÔNG ĐOẠN");

        javax.swing.GroupLayout pTittleLayout = new javax.swing.GroupLayout(pTittle);
        pTittle.setLayout(pTittleLayout);
        pTittleLayout.setHorizontalGroup(
            pTittleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTittleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 956, Short.MAX_VALUE)
                .addContainerGap())
        );
        pTittleLayout.setVerticalGroup(
            pTittleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        pTongQuan.setBackground(new java.awt.Color(255, 255, 255));
        pTongQuan.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 5, 0, 0, new java.awt.Color(233, 231, 231)));

        scrollDSCN.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(102, 102, 102), null, new java.awt.Color(153, 0, 51)), "Danh sách công đoạn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        tableCongDoan.setBackground(new java.awt.Color(242, 242, 242));
        tableCongDoan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableCongDoan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCongDoanMouseClicked(evt);
            }
        });
        scrollDSCN.setViewportView(tableCongDoan);

        scrollCD.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(102, 102, 102), null, new java.awt.Color(153, 0, 0)), "Danh sách công nhân", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        tableCongNhan.setBackground(new java.awt.Color(242, 242, 242));
        tableCongNhan.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        tableCongNhan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã CN", "Họ tên"
            }
        ));
        tableCongNhan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCongNhanMouseClicked(evt);
            }
        });
        scrollCD.setViewportView(tableCongNhan);
        tableCongNhan.getAccessibleContext().setAccessibleDescription("");

        panelThongTin.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, new java.awt.Color(153, 0, 0), null, new java.awt.Color(102, 102, 102)), "Thông tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 2, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Mã công nhân:");

        txtMaCN.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtMaCN.setEnabled(false);
        txtMaCN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaCNActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Họ tên công nhân:");
        jLabel2.setToolTipText("");

        txtHoTenCN.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtHoTenCN.setEnabled(false);
        txtHoTenCN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHoTenCNActionPerformed(evt);
            }
        });

        txtTenCD.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtTenCD.setEnabled(false);
        txtTenCD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenCDActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Tên công đoạn:");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Mã công đoạn: ");

        txtMaCD.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtMaCD.setEnabled(false);
        txtMaCD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaCDActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("Số lượng:");

        txtSoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoLuongActionPerformed(evt);
            }
        });

        panelXuLy.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, null, null, new java.awt.Color(255, 204, 204)), "Xử lý phân công", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 2, 12))); // NOI18N

        btnLamMoi.setBackground(new java.awt.Color(85, 167, 222));
        btnLamMoi.setForeground(new java.awt.Color(255, 255, 255));
        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/reset.png"))); // NOI18N
        btnLamMoi.setLabel("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(85, 167, 222));
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Td_Del_32px.png"))); // NOI18N
        btnXoa.setLabel("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnXacNhan.setBackground(new java.awt.Color(85, 167, 222));
        btnXacNhan.setForeground(new java.awt.Color(255, 255, 255));
        btnXacNhan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Save.png"))); // NOI18N
        btnXacNhan.setMnemonic('t');
        btnXacNhan.setLabel("Xác nhận");
        btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(85, 167, 222));
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/write.png"))); // NOI18N
        btnSua.setLabel("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelXuLyLayout = new javax.swing.GroupLayout(panelXuLy);
        panelXuLy.setLayout(panelXuLyLayout);
        panelXuLyLayout.setHorizontalGroup(
            panelXuLyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelXuLyLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelXuLyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
                .addGap(19, 19, 19)
                .addGroup(panelXuLyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnXacNhan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );
        panelXuLyLayout.setVerticalGroup(
            panelXuLyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelXuLyLayout.createSequentialGroup()
                .addGroup(panelXuLyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelXuLyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62))
        );

        lbThongBao.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lbThongBao.setForeground(new java.awt.Color(255, 0, 51));
        lbThongBao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout panelThongTinLayout = new javax.swing.GroupLayout(panelThongTin);
        panelThongTin.setLayout(panelThongTinLayout);
        panelThongTinLayout.setHorizontalGroup(
            panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelThongTinLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelXuLy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelThongTinLayout.createSequentialGroup()
                .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbThongBao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelThongTinLayout.createSequentialGroup()
                        .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                            .addComponent(txtMaCD)
                            .addComponent(txtHoTenCN)
                            .addComponent(txtMaCN, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTenCD))))
                .addGap(6, 6, 6))
        );
        panelThongTinLayout.setVerticalGroup(
            panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelThongTinLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMaCN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtHoTenCN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtMaCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTenCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(lbThongBao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelXuLy, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        scrollDSPhanCong.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(102, 102, 102), null, new java.awt.Color(153, 0, 0)), "Danh sách phân công", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        tableDSPhanCong.setBackground(new java.awt.Color(242, 242, 242));
        tableDSPhanCong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableDSPhanCong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDSPhanCongMouseClicked(evt);
            }
        });
        tableDSPhanCong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableDSPhanCongKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableDSPhanCongKeyReleased(evt);
            }
        });
        scrollDSPhanCong.setViewportView(tableDSPhanCong);

        cbbTimTheoSP.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cbbTimTheoSP.setForeground(new java.awt.Color(59, 58, 58));
        cbbTimTheoSP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sản phẩm", " " }));
        cbbTimTheoSP.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lọc theo sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N
        cbbTimTheoSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTimTheoSPActionPerformed(evt);
            }
        });

        panelLocTheo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, new java.awt.Color(255, 255, 255), null, new java.awt.Color(204, 204, 255)), "Lọc theo:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        cbbCongDoan.setBorder(javax.swing.BorderFactory.createTitledBorder("Công đoạn"));
        cbbCongDoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbCongDoanActionPerformed(evt);
            }
        });

        cbbTayNghe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cắt vải", "May vắt sổ", "Đóng gói", "May móc xích kép", "May móc xích đơn", "Là ủi" }));
        cbbTayNghe.setBorder(javax.swing.BorderFactory.createTitledBorder("Tay nghề"));
        cbbTayNghe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTayNgheActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLocTheoLayout = new javax.swing.GroupLayout(panelLocTheo);
        panelLocTheo.setLayout(panelLocTheoLayout);
        panelLocTheoLayout.setHorizontalGroup(
            panelLocTheoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLocTheoLayout.createSequentialGroup()
                .addComponent(cbbCongDoan, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158)
                .addComponent(cbbTayNghe, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );
        panelLocTheoLayout.setVerticalGroup(
            panelLocTheoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLocTheoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(cbbCongDoan)
                .addComponent(cbbTayNghe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, null, new java.awt.Color(153, 153, 153)), "Lọc theo ngày bắt đầu"));

        btnXemPC.setBackground(new java.awt.Color(85, 167, 222));
        btnXemPC.setForeground(new java.awt.Color(255, 255, 255));
        btnXemPC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/phieu_32px.png"))); // NOI18N
        btnXemPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemPCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dateCBD, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnXemPC)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnXemPC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(dateCBD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pTongQuanLayout = new javax.swing.GroupLayout(pTongQuan);
        pTongQuan.setLayout(pTongQuanLayout);
        pTongQuanLayout.setHorizontalGroup(
            pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTongQuanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pTongQuanLayout.createSequentialGroup()
                        .addGroup(pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pTongQuanLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(cbbTimTheoSP, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pTongQuanLayout.createSequentialGroup()
                                .addComponent(scrollDSCN, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(scrollCD, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(panelLocTheo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pTongQuanLayout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pTongQuanLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(panelThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(54, 54, 54))
                    .addGroup(pTongQuanLayout.createSequentialGroup()
                        .addComponent(scrollDSPhanCong, javax.swing.GroupLayout.PREFERRED_SIZE, 931, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pTongQuanLayout.setVerticalGroup(
            pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTongQuanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pTongQuanLayout.createSequentialGroup()
                        .addComponent(panelLocTheo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrollDSCN, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(scrollCD, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addComponent(panelThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbbTimTheoSP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollDSPhanCong, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(154, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pPhanCongLayout = new javax.swing.GroupLayout(pPhanCong);
        pPhanCong.setLayout(pPhanCongLayout);
        pPhanCongLayout.setHorizontalGroup(
            pPhanCongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pTittle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pPhanCongLayout.createSequentialGroup()
                .addComponent(pTongQuan, javax.swing.GroupLayout.PREFERRED_SIZE, 950, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pPhanCongLayout.setVerticalGroup(
            pPhanCongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pPhanCongLayout.createSequentialGroup()
                .addComponent(pTittle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pTongQuan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 973, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pPhanCong, javax.swing.GroupLayout.DEFAULT_SIZE, 973, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 898, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pPhanCong, javax.swing.GroupLayout.DEFAULT_SIZE, 898, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaCNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaCNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaCNActionPerformed

    private void txtHoTenCNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHoTenCNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHoTenCNActionPerformed

    private void txtTenCDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenCDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenCDActionPerformed

    private void txtMaCDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaCDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaCDActionPerformed

    private void txtSoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoLuongActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        lbThongBao.setText("");
        if (tableDSPhanCong.getSelectedRow() == -1) {
            lbThongBao.setText("Vui lòng chọn phân công cần xoá");
        } else {
            lbttCN.setText(txtHoTenCN.getText() + "-" + txtMaCN.getText());
            lbXacNhanXoa.setText("<html>Bạn có chắc muốn xóa công đoạn<br><font color='red'>" + txtTenCD.getText() + "</font> - <font color='red'>" + txtMaCD.getText() + " hong?" + "</font></html>");
            comfirmDelete.setVisible(true);
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        xoaTrang();
        lbThongBao.setText("");
        tableCongDoan.clearSelection();
        tableCongNhan.clearSelection();
        tableDSPhanCong.clearSelection();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        lbThongBao.setText("");
        if (tableDSPhanCong.getSelectedRow() == -1)
            lbThongBao.setText("Vui lòng chọn phân công cần sửa");
        else {
            lbThongBao.setText("");
            try {
                double number = Double.parseDouble(txtSoLuong.getText());
            } catch (NumberFormatException ex) {
                lbThongBao.setText("Số lượng không hợp lệ");
                return;
            }
            BangPhanCong bangPC = phanCong_Dao.getAllBangPhanCong().get(tableDSPhanCong.getSelectedRow());
            if (bangPC.getCongNhan().getMaCN().equalsIgnoreCase(txtMaCN.getText())
                    && bangPC.getCongNhan().getHoTen().equalsIgnoreCase(txtHoTenCN.getText())
                    && bangPC.getCongDoan().getMaCD().equalsIgnoreCase(txtMaCD.getText())
                    && bangPC.getCongDoan().getTenCD().equalsIgnoreCase(txtTenCD.getText())
                    && bangPC.getSoLuong() == (Integer.valueOf(txtSoLuong.getText()))) //kiểm tra có sự thay đổi dữ liệu để update không
            {
                lbThongBao.setText("Vui lòng chỉnh sửa thông tin cần update");
            } else {
                if (Integer.valueOf(txtSoLuong.getText()) > bangPC.getSoLuong() - Integer.valueOf(tableCongDoan.getValueAt(tableCongDoan.getSelectedRow(), 2).toString())) {
                    lbThongBao.setText("Số lượng lớn hơn số lượng còn");// kiểm tra số lượng nhập có lớn hơn số lượng còn không
                    return;
                }
                if (!checkSLHTCDTruoc(congDoan_Dao.getCongDoanTheoMa(txtMaCD.getText()))) {
                    return;
                }
//                if()
                bangPC.setCongDoan(congDoan_Dao.getCongDoanTheoMa(txtMaCD.getText()));
                bangPC.setCongNhan(congNhan_Dao.getCongNhanTheoMa(txtMaCN.getText()));
                bangPC.setSoLuong(Integer.valueOf(txtSoLuong.getText()));
                if (phanCong_Dao.updateBangPhanCong(bangPC)) {
                    lbThongBao.setText("Update thành công");
                    int indexCD = txtTenCD.getText().indexOf("-");
                    cbbTimTheoSP.setSelectedItem(txtTenCD.getText().substring(indexCD + 1).replace("(", "").replace(")", ""));
                    cbbTayNghe.setSelectedIndex(cbbTayNghe.getSelectedIndex());
                    xoaTrang();
                } else {
                    lbThongBao.setText("Update thất bại");
                }
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed
//    private boolean checkCongDoanTheoTayNghe(){
//        
//    }
    private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanActionPerformed
        lbThongBao.setText("");
        if (txtHoTenCN.getText().equals("")) {
            lbThongBao.setText("Chưa chọn công nhân");
            return;
        }
        if (txtMaCD.getText().equals("")) {
            lbThongBao.setText("Chưa chọn công đoạn");
            return;
        }
        if (txtSoLuong.getText().equals("")) {
            lbThongBao.setText("Nhập số lượng phân công");
            txtSoLuong.requestFocus();
            return;
        }
        try {
            double number = Double.parseDouble(txtSoLuong.getText());
        } catch (NumberFormatException ex) {
            lbThongBao.setText("Số lượng không hợp lệ");
            return;
        }
        lbThongBao.setText("");
        CongDoan cd = congDoan_Dao.getCongDoanTheoMa(txtMaCD.getText());
        if (cd != null) {
            if (Integer.valueOf(txtSoLuong.getText().toString()) > Integer.valueOf(tableCongDoan.getValueAt(tableCongDoan.getSelectedRow(), 2).toString())) {
                lbThongBao.setText("Số lượng lớn hơn số lượng còn");
                return;
            } else {
                if (Integer.valueOf(txtSoLuong.getText()) == 0) {
                    lbThongBao.setText("Số lượng không hợp lệ");
                    return;
                }
                if (!checkSLHTCDTruoc(cd)) {
                    return;
                }
                BangPhanCong pcTemp = phanCong_Dao.getBangPhanCongTheoMaCNMaCD(txtMaCN.getText(), txtMaCD.getText());
                if (pcTemp.getMaBangPC() != null) {
                    pcTemp.setSoLuong(pcTemp.getSoLuong() + Integer.parseInt(txtSoLuong.getText()));
                    if (phanCong_Dao.updateBangPhanCong(pcTemp)) {
                        lbThongBao.setText("Thêm số lượng thành công!");
                        int indexCD = txtTenCD.getText().indexOf("-");
                        cbbTimTheoSP.setSelectedItem(txtTenCD.getText().substring(indexCD + 1).replace("(", "").replace(")", ""));
                        cbbTayNghe.setSelectedIndex(cbbTayNghe.getSelectedIndex());
                        xoaTrang();
                        return;
                    } else {
                        lbThongBao.setText("Phân công Thất bại!");
                        return;
                    }
                }
                LocalDate currentDate = LocalDate.now();
                String maBangPCMoiNhat = phanCong_Dao.getBangPhanCongMoiNhat().getMaBangPC();
                String nowMonth = String.format("%02d", currentDate.getMonthValue());
                String nowDay = String.format("%02d", currentDate.getDayOfMonth());
                String ngayThangNamHTai = Integer.toString(currentDate.getYear() % 100) + nowMonth + nowDay;
                int bonSoCuoiMaBangPCMoiNhat = 1;
                if (maBangPCMoiNhat.substring(0, 6).equals(ngayThangNamHTai)) {
                    bonSoCuoiMaBangPCMoiNhat = Integer.valueOf(maBangPCMoiNhat.substring(maBangPCMoiNhat.length() - 4)) + 1;
                }
                String ddddMa = String.format("%04d", bonSoCuoiMaBangPCMoiNhat);
                String maBangPCNew = Integer.toString(currentDate.getYear() % 100) + nowMonth + nowDay + ddddMa;//Mã bảng Pc mới
                BangPhanCong pcNew = new BangPhanCong(maBangPCNew, Integer.valueOf(txtSoLuong.getText().toString()), cd, congNhan_Dao.getCongNhanTheoMa(txtMaCN.getText()));

                if (phanCong_Dao.createBangPhanCong(pcNew)) {
                    lbThongBao.setText("phân công thành công");
                    modelPhanCong.setNumRows(0);
                    String congDoan = txtTenCD.getText();
                    int indexCD = congDoan.indexOf("-");
                    if (indexCD != -1) {
                        cbbTimTheoSP.setSelectedItem(txtTenCD.getText().substring(indexCD + 1).replace("(", "").replace(")", ""));
                        cbbTayNghe.setSelectedIndex(cbbTayNghe.getSelectedIndex());
                        xoaTrang();
                    }
                } else {
                    lbThongBao.setText("Thất bại");
                }
            }
        }
    }//GEN-LAST:event_btnXacNhanActionPerformed

    private void cbbTayNgheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTayNgheActionPerformed
        if (processEvent) {
            xoaTrangtxt();
            modelDSCN.setNumRows(0);
            for (CongNhan s : congNhan_Dao.getAllCongNhanTheoTayNghe(cbbTayNghe.getSelectedItem().toString())) {
                String[] row = {s.getMaCN(), s.getHoTen()};
                modelDSCN.addRow(row);
            }
            processEvent = false;
            cbbCongDoan.setSelectedIndex(0);
            processEvent = true;
            addListCD(cbbTayNghe.getSelectedItem().toString());
        }
    }//GEN-LAST:event_cbbTayNgheActionPerformed

    private void cbbCongDoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbCongDoanActionPerformed
        if (processEvent)
            cbbSK();
        xoaTrangtxt();
    }//GEN-LAST:event_cbbCongDoanActionPerformed
    private void cbbSK() {
        modelCongDoan.setNumRows(0);
        String congDoan = cbbCongDoan.getSelectedItem().toString();
        int indexCD = congDoan.indexOf("-");
        String tenCD = congDoan.substring(0, indexCD);
        String tenSP = congDoan.substring(indexCD + 1).replace("(", "").replace(")", "");
        CongDoan s = congDoan_Dao.getCongDoanTheoTenCDTenSP(tenCD, tenSP);

        String[] row = {s.getMaCD(), congDoan, Integer.toString(s.getSoLuong() - phanCong_Dao.getSLConCuaCD(s.getMaCD()))};
        modelCongDoan.addRow(row);
        String CongDoan = cbbCongDoan.getSelectedItem().toString();
        if (!CongDoan.equals("")) {
            addListCN(tenCD);
            processEvent = false;
            cbbTayNghe.setSelectedItem(tenCD);
            processEvent = true;
        }
    }

    private void cbbTimTheoSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTimTheoSPActionPerformed
        modelPhanCong.setNumRows(0);
        int stt = 1;
        for (BangPhanCong s : phanCong_Dao.getAllBangPhanCongTheoSP(modelcbbSanPham2.getSelectedItem().toString())) {
            String[] row = {Integer.toString(stt), s.getCongNhan().getMaCN(), s.getCongNhan().getHoTen(), s.getCongDoan().getMaCD(), s.getCongDoan().getTenCD(), s.getCongDoan().getSanPham().getTenSP(), s.getCongDoan().getNgayBatDauString(), Integer.toString(s.getSoLuong())};
            modelPhanCong.addRow(row);
            stt++;
        }
    }//GEN-LAST:event_cbbTimTheoSPActionPerformed
    private void setSLPCTuDong() {
        CongNhan cn = congNhan_Dao.getCongNhanTheoMa(txtMaCN.getText());
        int slconLai = Integer.valueOf(tableCongDoan.getValueAt(tableCongDoan.getSelectedRow(), 2).toString());
        BangPhanCong pc = phanCong_Dao.getBangPCTheoMaCDMaCN(txtMaCD.getText(), txtMaCN.getText());
        ArrayList<CongNhan> listCN = congNhan_Dao.getAllCongNhanTheoTayNghe(cn.getTayNghe());
        ArrayList<BangPhanCong> listPC = phanCong_Dao.getAllBangPhanCongTheoCD(txtMaCD.getText());
        int slCNChuaChiaCD = listCN.size() - listPC.size();
        if (slCNChuaChiaCD > 1) {
            txtSoLuong.setText(Integer.toString(slconLai / slCNChuaChiaCD));
        } else if (slCNChuaChiaCD == 1) {
            txtSoLuong.setText(Integer.toString(slconLai));
        }
    }
    private void tableCongDoanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCongDoanMouseClicked
        txtMaCD.setText(tableCongDoan.getValueAt(tableCongDoan.getSelectedRow(), 0).toString());
        txtTenCD.setText(tableCongDoan.getValueAt(tableCongDoan.getSelectedRow(), 1).toString());
        if (!txtMaCN.getText().equals(""))
            setSLPCTuDong();
    }//GEN-LAST:event_tableCongDoanMouseClicked

    private void tableDSPhanCongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDSPhanCongMouseClicked
        tableCongDoan.clearSelection();
        tableCongNhan.clearSelection();
        String maCN = tableDSPhanCong.getValueAt(tableDSPhanCong.getSelectedRow(), 1).toString();
        txtMaCN.setText(maCN);
        for (int row = 0; row < modelDSCN.getRowCount(); row++) {
            if (modelDSCN.getValueAt(row, 0).equals(maCN)) {
                tableCongNhan.setRowSelectionInterval(row, row);
                break;
            }
        }

        txtHoTenCN.setText(tableDSPhanCong.getValueAt(tableDSPhanCong.getSelectedRow(), 2).toString());
        CongDoan cn = congDoan_Dao.getCongDoanTheoMa(tableDSPhanCong.getValueAt(tableDSPhanCong.getSelectedRow(), 3).toString());
        String maCD = cn.getMaCD();
        txtMaCD.setText(maCD);
        for (int row = 0; row < modelCongDoan.getRowCount(); row++) {
            if (modelCongDoan.getValueAt(row, 0).equals(maCD)) {
                tableCongDoan.setRowSelectionInterval(row, row);
                break;
            }
        }
        txtTenCD.setText(cn.getTenCD());
        txtSoLuong.setText(tableDSPhanCong.getValueAt(tableDSPhanCong.getSelectedRow(), 7).toString());
    }//GEN-LAST:event_tableDSPhanCongMouseClicked

    private void btnHuyXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyXoaActionPerformed
        comfirmDelete.setVisible(false);
    }//GEN-LAST:event_btnHuyXoaActionPerformed

    private void btnXacNhanXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanXoaActionPerformed
        boolean xoaPC = false;
        if (phanCong_Dao.xoaBangPhanCong(phanCong_Dao.getAllBangPhanCong().get(tableDSPhanCong.getSelectedRow()).getMaBangPC())) {
            comfirmDelete.setVisible(false);
            lbThongBao.setText("Xóa thành công!");
            int indexCD = txtTenCD.getText().indexOf("-");
            cbbTimTheoSP.setSelectedItem(txtTenCD.getText().substring(indexCD + 1));
            cbbSK();
            addListCN(cbbTayNghe.getSelectedItem().toString());
            xoaTrang();
        } else {
            comfirmDelete.setVisible(false);
            lbThongBao.setText("Phân công này đã được thực hiện!");
            xoaTrang();
        }
    }//GEN-LAST:event_btnXacNhanXoaActionPerformed

    private void tableCongNhanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCongNhanMouseClicked
        txtMaCN.setText(tableCongNhan.getValueAt(tableCongNhan.getSelectedRow(), 0).toString());
        txtHoTenCN.setText(tableCongNhan.getValueAt(tableCongNhan.getSelectedRow(), 1).toString());
        if (!txtMaCD.getText().equals(""))
            setSLPCTuDong();
    }//GEN-LAST:event_tableCongNhanMouseClicked

    private void tableDSPhanCongKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableDSPhanCongKeyPressed

    }//GEN-LAST:event_tableDSPhanCongKeyPressed

    private void tableDSPhanCongKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableDSPhanCongKeyReleased
        int keyCode = evt.getKeyCode();
        tableCongDoan.clearSelection();
        tableCongNhan.clearSelection();
        if (keyCode == KeyEvent.VK_UP || keyCode == KeyEvent.VK_DOWN) {
            // Xử lý khi mũi tên lên hoặc mũi tên xuống được nhấn
            String maCN = tableDSPhanCong.getValueAt(tableDSPhanCong.getSelectedRow(), 1).toString();
            txtMaCN.setText(maCN);
            for (int row = 0; row < modelDSCN.getRowCount(); row++) {
                if (modelDSCN.getValueAt(row, 0).equals(maCN)) {
                    tableCongNhan.setRowSelectionInterval(row, row);
                    break;
                }
            }
            txtHoTenCN.setText(tableDSPhanCong.getValueAt(tableDSPhanCong.getSelectedRow(), 2).toString());
            CongDoan cn = congDoan_Dao.getCongDoanTheoMa(tableDSPhanCong.getValueAt(tableDSPhanCong.getSelectedRow(), 3).toString());
            String maCD = cn.getMaCD();
            txtMaCD.setText(maCD);
            for (int row = 0; row < modelCongDoan.getRowCount(); row++) {
                if (modelCongDoan.getValueAt(row, 0).equals(maCD)) {
                    tableCongDoan.setRowSelectionInterval(row, row);
                    break;
                }
            }
            txtTenCD.setText(cn.getTenCD());
            txtSoLuong.setText(tableDSPhanCong.getValueAt(tableDSPhanCong.getSelectedRow(), 7).toString());
        }
    }//GEN-LAST:event_tableDSPhanCongKeyReleased

    private void btnXemPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemPCActionPerformed
        Date dateLocBD = dateCBD.getDate();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String dateReal = dateFormat.format(dateLocBD);

        modelPhanCong.setNumRows(0);
        tableDSPhanCong.setModel(modelPhanCong);
        ArrayList<BangPhanCong> listPhanCong = phanCong_Dao.getAllBangPhanCongTheoNgayBD(dateReal);
        tableDSPhanCong.getColumnModel().getColumn(0).setPreferredWidth(10);
        int stt = 1;
        for (BangPhanCong s : listPhanCong) {
            if (s.getCongDoan().getSanPham().getTenSP().equals(cbbTimTheoSP.getSelectedItem().toString())) {
                String[] row = {Integer.toString(stt), s.getCongNhan().getMaCN(), s.getCongNhan().getHoTen(), s.getCongDoan().getMaCD(), s.getCongDoan().getTenCD(), s.getCongDoan().getSanPham().getTenSP(), s.getCongDoan().getNgayBatDauString(), Integer.toString(s.getSoLuong())};
                modelPhanCong.addRow(row);
                stt++;
            }
        }
    }//GEN-LAST:event_btnXemPCActionPerformed
    private void addListCN(String tayNghe) {
        String[] row1 = {"Mã CN", "Họ tên"};
        modelDSCN = new DefaultTableModel(row1, 0);
        tableCongNhan.setModel(modelDSCN);
        ArrayList<CongNhan> listCN = congNhan_Dao.getAllCongNhanTheoTayNghe(tayNghe);
        for (CongNhan s : listCN) {
            String[] row = {s.getMaCN(), s.getHoTen()};
            modelDSCN.addRow(row);
        }
    }

    private void addListCD(String tenCD) {

        String[] row1 = {"Mã CĐ", "Tên CĐ", "SL còn", "CĐ trước"};
        modelCongDoan = new DefaultTableModel(row1, 0);
        tableCongDoan.setModel(modelCongDoan);
        ArrayList<CongDoan> listCD = congDoan_Dao.getAllCongDoanTheoTenCD(tenCD);
        tableCongDoan.getColumnModel().getColumn(2).setPreferredWidth(40);
        tableCongDoan.getColumnModel().getColumn(1).setPreferredWidth(120);
        for (CongDoan s : listCD) {
            String[] row = {s.getMaCD(), s.getTenCD() + "-" + "(" + s.getSanPham().getTenSP() + ")", Integer.toString(s.getSoLuong() - phanCong_Dao.getSLConCuaCD(s.getMaCD())), s.getTenCDTruoc()};
            modelCongDoan.addRow(row);
        }

    }

    private void addListPhanCong() {

        String[] row1 = {"STT", "Mã CN", "Họ tên", "Mã công đoạn", "Công đoạn", "Sản phẩm", "Ngày bắt đầu", "Số lượng"};
        modelPhanCong = new DefaultTableModel(row1, 0);
        tableDSPhanCong.setModel(modelPhanCong);
//        ArrayList<BangPhanCong> listPhanCong = phanCong_Dao.getAllBangPhanCong();
        tableDSPhanCong.getColumnModel().getColumn(0).setPreferredWidth(10);
//        int stt = 0;
//        for (BangPhanCong s : listPhanCong) {
//            String[] row = {Integer.toString(stt), s.getCongNhan().getMaCN(), s.getCongNhan().getHoTen(), s.getCongDoan().getMaCD(), s.getCongDoan().getTenCD(), s.getCongDoan().getSanPham().getTenSP(), s.getCongDoan().getNgayBatDauString(), Integer.toString(s.getSoLuong())};
//            modelPhanCong.addRow(row);
//            stt++;
//        }
    }

    //add dữ liệu vào Các CBB tìm kiếm
    private void addCBB() {

        modelcbbCongDoan = new DefaultComboBoxModel<String>();
        modelcbbCongDoan.addElement("");
        for (CongDoan s : congDoan_Dao.getAllCongDoanTheoTrangThai()) {
            modelcbbCongDoan.addElement("" + s.getTenCD() + "-(" + s.getSanPham().getTenSP() + ")");
        }
        cbbCongDoan.setModel(modelcbbCongDoan);
        modelcbbSanPham2 = new DefaultComboBoxModel<String>();
        for (SanPham s : sanPham_Dao.getAllSanPham()) {
            modelcbbSanPham2.addElement("" + s.getTenSP());
        }
        cbbTimTheoSP.setModel(modelcbbSanPham2);
    }

    private boolean checkSLHTCDTruoc(CongDoan cd) {
        ctBangCC_Dao = new ChiTietBangChamCong_DAO();
        int check = 0;
        if (cd.getTenCDTruoc().equals("")) {
            return true;
        }
        CongDoan cdTruoc = congDoan_Dao.getCongDoanTruoc(cd);
        int slCDTruoc = phanCong_Dao.getTongSLHTCuaCD(cdTruoc.getMaCD());
        if (!cd.getTenCDTruoc().equals("")) {
            if (slCDTruoc < Integer.valueOf(txtSoLuong.getText())) {
                lbThongBao.setText("Công đoạn trước mới chỉ hoàn thành " + Integer.toString(slCDTruoc) + " sản phẩm");
                return false;
            }
        }
        return true;
    }

    private void xoaTrang() {
        tableCongDoan.clearSelection();
        tableCongNhan.clearSelection();
        tableDSPhanCong.clearSelection();
        txtHoTenCN.setText("");
        txtMaCD.setText("");
        txtMaCN.setText("");
        txtSoLuong.setText("");
        txtTenCD.setText("");
    }
    private void xoaTrangtxt(){
        txtHoTenCN.setText("");
        txtMaCD.setText("");
        txtMaCN.setText("");
        txtSoLuong.setText("");
        txtTenCD.setText("");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuyXoa;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnXacNhan;
    private javax.swing.JButton btnXacNhanXoa;
    private javax.swing.JButton btnXemPC;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbbCongDoan;
    private javax.swing.JComboBox<String> cbbTayNghe;
    private javax.swing.JComboBox<String> cbbTimTheoSP;
    private javax.swing.JDialog comfirmDelete;
    private com.toedter.calendar.JDateChooser dateCBD;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lbThongBao;
    private javax.swing.JLabel lbXacNhanXoa;
    private javax.swing.JLabel lbttCN;
    private javax.swing.JPanel pPhanCong;
    private javax.swing.JPanel pTittle;
    private javax.swing.JPanel pTongQuan;
    private javax.swing.JPanel panelLocTheo;
    private javax.swing.JPanel panelThongTin;
    private javax.swing.JPanel panelXuLy;
    private javax.swing.JScrollPane scrollCD;
    private javax.swing.JScrollPane scrollDSCN;
    private javax.swing.JScrollPane scrollDSPhanCong;
    private javax.swing.JTable tableCongDoan;
    private javax.swing.JTable tableCongNhan;
    private javax.swing.JTable tableDSPhanCong;
    private javax.swing.JTextField txtHoTenCN;
    private javax.swing.JTextField txtMaCD;
    private javax.swing.JTextField txtMaCN;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenCD;
    // End of variables declaration//GEN-END:variables

}
