/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import dao.BangChamCongCongNhan_DAO;
import dao.BangPhanCong_DAO;
import dao.ChiTietBangChamCong_DAO;
import dao.CongDoan_DAO;
import dao.CongNhan_DAO;
import dao.SanPham_DAO;
import entity.BangChamCongCongNhan;
import entity.BangPhanCong;
import entity.ChiTietBangChamCong;
import entity.CongDoan;
import entity.CongNhan;
import entity.SanPham;
import java.awt.Color;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author acer
 */
public class GDPhanCong extends javax.swing.JPanel {

    /**
     * Creates new form GDPhanCong
     */
    public GDPhanCong() {
        phanCong_Dao = new BangPhanCong_DAO();
        congDoan_Dao = new CongDoan_DAO();
        congNhan_Dao = new CongNhan_DAO();
        sanPham_Dao = new SanPham_DAO();
        try {
            connectDB.ConnectDB.getInstance().connect();
        } catch (Exception e) {
            e.printStackTrace();
        }
        initComponents();
        addListCN();
        addListCD();
        addListPhanCong();
        addCBB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comfirmDelete = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        lbttCN = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnHuyXoa = new javax.swing.JButton();
        btnXacNhanXoa = new javax.swing.JButton();
        lbXacNhanXoa = new javax.swing.JLabel();
        pPhanCong = new javax.swing.JPanel();
        pTittle = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        pTongQuan = new javax.swing.JPanel();
        scrollDSCN = new javax.swing.JScrollPane();
        tableCongDoan = new javax.swing.JTable();
        scrollCD = new javax.swing.JScrollPane();
        tableCongNhan = new javax.swing.JTable();
        panelThongTin = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMaCN = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtHoTenCN = new javax.swing.JTextField();
        txtTenCD = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtMaCD = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        panelXuLy = new javax.swing.JPanel();
        btnLamMoi = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnXacNhan = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        lbThongBao = new javax.swing.JLabel();
        scrollDSPhanCong = new javax.swing.JScrollPane();
        tableDSPhanCong = new javax.swing.JTable();
        cbbTimTheoSP = new javax.swing.JComboBox<>();
        panelLocTheo = new javax.swing.JPanel();
        cbbTimSP = new javax.swing.JComboBox<>();
        cbbCongDoan = new javax.swing.JComboBox<>();
        cbbTayNghe = new javax.swing.JComboBox<>();
        btnXuatFileExcel = new javax.swing.JButton();

        comfirmDelete.setTitle("Xác nhận xóa");
        comfirmDelete.setAlwaysOnTop(true);
        comfirmDelete.setFocusTraversalPolicyProvider(true);
        comfirmDelete.setLocation(new java.awt.Point(540, 280));
        comfirmDelete.setModal(true);
        comfirmDelete.setSize(new java.awt.Dimension(340, 250));

        lbttCN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbttCN.setText("Họ tên công nhân A - Mã công nhân");
        lbttCN.setPreferredSize(new java.awt.Dimension(340, 30));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lbttCN, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbttCN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setPreferredSize(new java.awt.Dimension(340, 220));

        btnHuyXoa.setBackground(new java.awt.Color(255, 102, 102));
        btnHuyXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnHuyXoa.setText("Hủy");
        btnHuyXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyXoaActionPerformed(evt);
            }
        });

        btnXacNhanXoa.setBackground(new java.awt.Color(255, 102, 102));
        btnXacNhanXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXacNhanXoa.setLabel("Xác nhận");
        btnXacNhanXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanXoaActionPerformed(evt);
            }
        });

        lbXacNhanXoa.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbXacNhanXoa.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbXacNhanXoa.setText("Bạn có chắc muốn xóa ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(btnXacNhanXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnHuyXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbXacNhanXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(lbXacNhanXoa, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXacNhanXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHuyXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout comfirmDeleteLayout = new javax.swing.GroupLayout(comfirmDelete.getContentPane());
        comfirmDelete.getContentPane().setLayout(comfirmDeleteLayout);
        comfirmDeleteLayout.setHorizontalGroup(
            comfirmDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
        comfirmDeleteLayout.setVerticalGroup(
            comfirmDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(comfirmDeleteLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pPhanCong.setPreferredSize(new java.awt.Dimension(958, 735));

        pTittle.setBackground(new java.awt.Color(0, 0, 0));

        jLabel15.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(191, 95, 95));
        jLabel15.setText("PHÂN CÔNG CÔNG ĐOẠN");

        javax.swing.GroupLayout pTittleLayout = new javax.swing.GroupLayout(pTittle);
        pTittle.setLayout(pTittleLayout);
        pTittleLayout.setHorizontalGroup(
            pTittleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTittleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 961, Short.MAX_VALUE)
                .addContainerGap())
        );
        pTittleLayout.setVerticalGroup(
            pTittleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        pTongQuan.setBackground(new java.awt.Color(217, 217, 217));

        scrollDSCN.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(102, 102, 102), null, new java.awt.Color(153, 0, 51)), "Danh sách công đoạn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        tableCongDoan.setBackground(new java.awt.Color(242, 242, 242));
        tableCongDoan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableCongDoan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCongDoanMouseClicked(evt);
            }
        });
        scrollDSCN.setViewportView(tableCongDoan);

        scrollCD.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(102, 102, 102), null, new java.awt.Color(153, 0, 0)), "Danh sách công nhân", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        tableCongNhan.setBackground(new java.awt.Color(242, 242, 242));
        tableCongNhan.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        tableCongNhan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableCongNhan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCongNhanMouseClicked(evt);
            }
        });
        scrollCD.setViewportView(tableCongNhan);
        tableCongNhan.getAccessibleContext().setAccessibleDescription("");

        panelThongTin.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, new java.awt.Color(153, 0, 0), null, new java.awt.Color(102, 102, 102)), "Thông tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 2, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Mã công nhân:");

        txtMaCN.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtMaCN.setEnabled(false);
        txtMaCN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaCNActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Họ tên công nhân:");
        jLabel2.setToolTipText("");

        txtHoTenCN.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtHoTenCN.setEnabled(false);
        txtHoTenCN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHoTenCNActionPerformed(evt);
            }
        });

        txtTenCD.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtTenCD.setEnabled(false);
        txtTenCD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenCDActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Tên công đoạn:");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Mã công đoạn: ");

        txtMaCD.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtMaCD.setEnabled(false);
        txtMaCD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaCDActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("Số lượng:");

        txtSoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoLuongActionPerformed(evt);
            }
        });

        panelXuLy.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, null, null, new java.awt.Color(255, 204, 204)), "Xử lý phân công", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 2, 12))); // NOI18N

        btnLamMoi.setBackground(new java.awt.Color(255, 102, 102));
        btnLamMoi.setForeground(new java.awt.Color(255, 255, 255));
        btnLamMoi.setLabel("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(255, 102, 102));
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setLabel("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnXacNhan.setBackground(new java.awt.Color(255, 102, 102));
        btnXacNhan.setForeground(new java.awt.Color(255, 255, 255));
        btnXacNhan.setLabel("Xác nhận");
        btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(255, 102, 102));
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setLabel("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelXuLyLayout = new javax.swing.GroupLayout(panelXuLy);
        panelXuLy.setLayout(panelXuLyLayout);
        panelXuLyLayout.setHorizontalGroup(
            panelXuLyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelXuLyLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(panelXuLyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panelXuLyLayout.createSequentialGroup()
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelXuLyLayout.createSequentialGroup()
                        .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );
        panelXuLyLayout.setVerticalGroup(
            panelXuLyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelXuLyLayout.createSequentialGroup()
                .addGroup(panelXuLyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelXuLyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62))
        );

        lbThongBao.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lbThongBao.setForeground(new java.awt.Color(255, 0, 51));
        lbThongBao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout panelThongTinLayout = new javax.swing.GroupLayout(panelThongTin);
        panelThongTin.setLayout(panelThongTinLayout);
        panelThongTinLayout.setHorizontalGroup(
            panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelThongTinLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelXuLy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelThongTinLayout.createSequentialGroup()
                .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbThongBao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelThongTinLayout.createSequentialGroup()
                        .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSoLuong)
                            .addComponent(txtMaCD)
                            .addComponent(txtHoTenCN)
                            .addComponent(txtMaCN, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTenCD))))
                .addGap(6, 6, 6))
        );
        panelThongTinLayout.setVerticalGroup(
            panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelThongTinLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMaCN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtHoTenCN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtMaCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTenCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(lbThongBao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelXuLy, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        scrollDSPhanCong.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(102, 102, 102), null, new java.awt.Color(153, 0, 0)), "Danh sách phân công", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        tableDSPhanCong.setBackground(new java.awt.Color(242, 242, 242));
        tableDSPhanCong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableDSPhanCong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDSPhanCongMouseClicked(evt);
            }
        });
        scrollDSPhanCong.setViewportView(tableDSPhanCong);

        cbbTimTheoSP.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cbbTimTheoSP.setForeground(new java.awt.Color(59, 58, 58));
        cbbTimTheoSP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sản phẩm", " " }));
        cbbTimTheoSP.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "tìm theo sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N
        cbbTimTheoSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTimTheoSPActionPerformed(evt);
            }
        });

        panelLocTheo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, new java.awt.Color(255, 255, 255), null, new java.awt.Color(204, 204, 255)), "Lọc theo:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        cbbTimSP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "May", "Cắt", "ủi", "cắt chỉ" }));
        cbbTimSP.setBorder(javax.swing.BorderFactory.createTitledBorder("Sản phẩm"));
        cbbTimSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTimSPActionPerformed(evt);
            }
        });

        cbbCongDoan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tên CD-Tên SP" }));
        cbbCongDoan.setBorder(javax.swing.BorderFactory.createTitledBorder("Công đoạn"));
        cbbCongDoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbCongDoanActionPerformed(evt);
            }
        });

        cbbTayNghe.setBorder(javax.swing.BorderFactory.createTitledBorder("Tay nghề"));
        cbbTayNghe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTayNgheActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLocTheoLayout = new javax.swing.GroupLayout(panelLocTheo);
        panelLocTheo.setLayout(panelLocTheoLayout);
        panelLocTheoLayout.setHorizontalGroup(
            panelLocTheoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLocTheoLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(cbbTayNghe, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                .addComponent(cbbCongDoan, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbbTimSP, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelLocTheoLayout.setVerticalGroup(
            panelLocTheoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLocTheoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(cbbTayNghe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cbbCongDoan)
                .addComponent(cbbTimSP))
        );

        btnXuatFileExcel.setBackground(new java.awt.Color(255, 102, 102));
        btnXuatFileExcel.setForeground(new java.awt.Color(255, 255, 255));
        btnXuatFileExcel.setActionCommand("Xya");
        btnXuatFileExcel.setLabel("<html><center>Xuất file<br>excel</center></html>");
        btnXuatFileExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatFileExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pTongQuanLayout = new javax.swing.GroupLayout(pTongQuan);
        pTongQuan.setLayout(pTongQuanLayout);
        pTongQuanLayout.setHorizontalGroup(
            pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTongQuanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pTongQuanLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelLocTheo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pTongQuanLayout.createSequentialGroup()
                                .addComponent(scrollCD, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(scrollDSCN, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))
                    .addGroup(pTongQuanLayout.createSequentialGroup()
                        .addComponent(scrollDSPhanCong, javax.swing.GroupLayout.PREFERRED_SIZE, 931, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pTongQuanLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnXuatFileExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbbTimTheoSP, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );
        pTongQuanLayout.setVerticalGroup(
            pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTongQuanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pTongQuanLayout.createSequentialGroup()
                        .addComponent(panelLocTheo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrollDSCN, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(scrollCD, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addComponent(panelThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbbTimTheoSP, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(btnXuatFileExcel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollDSPhanCong, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(206, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pPhanCongLayout = new javax.swing.GroupLayout(pPhanCong);
        pPhanCong.setLayout(pPhanCongLayout);
        pPhanCongLayout.setHorizontalGroup(
            pPhanCongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pTittle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pPhanCongLayout.createSequentialGroup()
                .addComponent(pTongQuan, javax.swing.GroupLayout.PREFERRED_SIZE, 950, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pPhanCongLayout.setVerticalGroup(
            pPhanCongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pPhanCongLayout.createSequentialGroup()
                .addComponent(pTittle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pTongQuan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 973, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pPhanCong, javax.swing.GroupLayout.DEFAULT_SIZE, 973, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 898, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pPhanCong, javax.swing.GroupLayout.DEFAULT_SIZE, 898, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaCNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaCNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaCNActionPerformed

    private void txtHoTenCNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHoTenCNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHoTenCNActionPerformed

    private void txtTenCDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenCDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenCDActionPerformed

    private void txtMaCDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaCDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaCDActionPerformed

    private void txtSoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoLuongActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        lbThongBao.setText("");
        if (tableDSPhanCong.getSelectedRow()==-1){
            lbThongBao.setText("Vui lòng chọn phân công cần xoá");
        }
        else{
            lbttCN.setText(txtHoTenCN.getText()+"-"+txtMaCN.getText());
            lbXacNhanXoa.setText("<html>Bạn có chắc muốn xóa công đoạn<br><font color='red'>" + txtTenCD.getText() + "</font> - <font color='red'>" + txtMaCD.getText()+" hong?"+ "</font></html>");
            comfirmDelete.setVisible(true);
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        xoaTrang();
        lbThongBao.setText("");
        tableCongDoan.clearSelection();
        tableCongNhan.clearSelection();
        tableDSPhanCong.clearSelection();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        lbThongBao.setText("");
        if(tableDSPhanCong.getSelectedRow()==-1)
            lbThongBao.setText("Vui lòng chọn phân công cần sửa");
        else{
            lbThongBao.setText("");
            try {
                double number = Double.parseDouble(txtSoLuong.getText());
                }
                catch (NumberFormatException ex) {
                   lbThongBao.setText("Số lượng không hợp lệ");
                   return;
            }
            BangPhanCong bangPC = phanCong_Dao.getAllBangPhanCong().get(tableDSPhanCong.getSelectedRow());
            if(bangPC.getCongNhan().getMaCN().equalsIgnoreCase(txtMaCN.getText())&&
                bangPC.getCongNhan().getHoTen().equalsIgnoreCase(txtHoTenCN.getText())&&
                bangPC.getCongDoan().getMaCD().equalsIgnoreCase(txtMaCD.getText())&&
                bangPC.getCongDoan().getTenCD().equalsIgnoreCase(txtTenCD.getText())&&
               bangPC.getSoLuong() == (Integer.valueOf(txtSoLuong.getText()))
                    ) //kiểm tra có sự thay đổi dữ liệu để update không
                lbThongBao.setText("Vui lòng chỉnh sửa thông tin cần update");
            else{
                 if(Integer.valueOf(txtSoLuong.getText().toString())> Integer.valueOf(tableCongDoan.getValueAt(tableCongDoan.getSelectedRow(), 2).toString())){
                    lbThongBao.setText("Số lượng lớn hơn số lượng còn");// kiểm tra số lượng nhập có lớn hơn số lượng còn không
                    return;
                 }
                if(!checkSLHTCDTruoc(congDoan_Dao.getCongDoanTheoMa(txtMaCD.getText())))
                    return;
                bangPC.setCongDoan(congDoan_Dao.getCongDoanTheoMa(txtMaCD.getText()));
                bangPC.setCongNhan(congNhan_Dao.getCongNhanTheoMa(txtMaCN.getText()));
                bangPC.setSoLuong(Integer.valueOf(txtSoLuong.getText()));
                if(phanCong_Dao.updateBangPhanCong(bangPC)){
                    lbThongBao.setText("Update thành công");
                    xoaTrang();
                    modelPhanCong.setNumRows(0);
                    addListPhanCong();
                    modelCongDoan.setNumRows(0);
                    addListCD();
                }
                else
                    lbThongBao.setText("Update thất bại");
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanActionPerformed
        lbThongBao.setText("");
        if (txtHoTenCN.getText().equals("")){
            lbThongBao.setText("Chưa chọn công nhân");
            return;
        }
        if(txtMaCD.getText().equals("")){
            lbThongBao.setText("Chưa chọn công đoạn");
            return;
        }
        if(txtSoLuong.getText().equals("")){
            lbThongBao.setText("Nhập số lượng phân công");
            txtSoLuong.requestFocus();
            return;
        }
         try {
            double number = Double.parseDouble(txtSoLuong.getText());
            }
         catch (NumberFormatException ex) {
            lbThongBao.setText("Số lượng không hợp lệ");
            return;
        }
        lbThongBao.setText("");
        CongDoan cd = congDoan_Dao.getCongDoanTheoMa(txtMaCD.getText());
        if(cd != null){
             if(Integer.valueOf(txtSoLuong.getText().toString())> Integer.valueOf(tableCongDoan.getValueAt(tableCongDoan.getSelectedRow(), 2).toString())){
                lbThongBao.setText("Số lượng lớn hơn số lượng còn");
                return;
             }
             else{
                 if(Integer.valueOf(txtSoLuong.getText())==0){
                    lbThongBao.setText("Số lượng không hợp lệ");
                    return;
                 }
                if(!checkSLHTCDTruoc(cd))
                    return;
                LocalDate currentDate = LocalDate.now();
                String maBangPCMoiNhat = phanCong_Dao.getBangPhanCongMoiNhat().getMaBangPC();
                String nowMonth =  String.format("%02d", currentDate.getMonthValue());
                String nowDay = String.format("%02d", currentDate.getDayOfMonth());
                String ngayThangNamHTai = Integer.toString(currentDate.getYear()%100) + nowMonth + nowDay;
                int bonSoCuoiMaBangPCMoiNhat= 1;
                if(maBangPCMoiNhat.substring(0, 6).equals(ngayThangNamHTai)){
                     bonSoCuoiMaBangPCMoiNhat= Integer.valueOf(maBangPCMoiNhat.substring(maBangPCMoiNhat.length() - 4)) + 1;
                }
                String ddddMa =  String.format("%04d", bonSoCuoiMaBangPCMoiNhat);
                String maBangPCNew = Integer.toString(currentDate.getYear()%100)+nowMonth+nowDay+ddddMa;//Mã bảng Pc mới
                BangPhanCong pcNew = new BangPhanCong(maBangPCNew, Integer.valueOf(txtSoLuong.getText().toString()), cd, congNhan_Dao.getCongNhanTheoMa(txtMaCN.getText()));
                 
                if (phanCong_Dao.createBangPhanCong(pcNew)){
                    lbThongBao.setText("phân công thành công");
                    modelPhanCong.setNumRows(0);
                    addListPhanCong();
                    modelCongDoan.setNumRows(0);
                    addListCD();
                    xoaTrang();
                }
                else 
                    lbThongBao.setText("Thất bại");
            }
        }
    }//GEN-LAST:event_btnXacNhanActionPerformed

    private void cbbTimSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTimSPActionPerformed
        modelCongDoan.setNumRows(0);
        String tenCD = modelcbbSanPham.getSelectedItem().toString();
        if (tenCD.equals("Tất cả")){
            addListCD();
            return;
        }
        int test;
        for (CongDoan s:congDoan_Dao.getAllCongDoan()){
            test = 0;
            int viTri = tenCD.indexOf('-');
            if(tenCD.substring(viTri+1).equals(s.getSanPham().getTenSP())){//lấy giá trị từ dấu - tới hết tức là tên sản phẩm
            for (BangPhanCong pc: phanCong_Dao.getAllBangPhanCong()){
                if (pc.getCongDoan().getMaCD().equalsIgnoreCase(s.getMaCD()))
                {
                    String [] row = {s.getMaCD(),s.getTenCD()+"-"+"("+s.getSanPham().getTenSP()+")", Integer.toString(s.getSoLuong()-pc.getSoLuong()),s.getTenCDTruoc()};
                    modelCongDoan.addRow(row);
                    test = 1;
                }
            }
            if (test == 0){
                 String [] row = {s.getMaCD(),s.getTenCD()+"-"+"("+s.getSanPham().getTenSP()+")", Integer.toString(s.getSoLuong())};
                 modelCongDoan.addRow(row);
            }  
            }
        } 
    }//GEN-LAST:event_cbbTimSPActionPerformed

    private void cbbTayNgheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTayNgheActionPerformed
        modelDSCN.setNumRows(0);
        if (modelcbbTayNghe.getSelectedItem().toString().equals("Tất cả")){
            addListCN();
            return;
        }
           
        for(CongNhan s: congNhan_Dao.getAllCongNhan()){
            if(s.getTayNghe().equalsIgnoreCase(modelcbbTayNghe.getSelectedItem().toString())){
                String [] row = {s.getMaCN(), s.getHoTen()};
                modelDSCN.addRow(row);
            }
        }
    }//GEN-LAST:event_cbbTayNgheActionPerformed

    private void btnXuatFileExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatFileExcelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnXuatFileExcelActionPerformed

    private void cbbCongDoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbCongDoanActionPerformed
        modelCongDoan.setNumRows(0);
        if (modelcbbCongDoan.getSelectedItem().toString().equals("Tất cả")){
            addListCD();
            return;
        }
        int test;
        for (CongDoan s:congDoan_Dao.getAllCongDoan()){
            test = 0;
            String cdSP = s.getTenCD()+"-"+"("+s.getSanPham().getTenSP()+")";
            if(modelcbbCongDoan.getSelectedItem().toString().equals(cdSP)){

            for (BangPhanCong pc: phanCong_Dao.getAllBangPhanCong()){
                if (pc.getCongDoan().getMaCD().equalsIgnoreCase(s.getMaCD()))
                {
                    String [] row = {s.getMaCD(),s.getTenCD()+"-"+"("+s.getSanPham().getTenSP()+")", Integer.toString(s.getSoLuong()-pc.getSoLuong()),s.getTenCDTruoc()};
                    modelCongDoan.addRow(row);
                    test = 1;
                }
            }
            if (test == 0){
                 String [] row = {s.getMaCD(),s.getTenCD()+"-"+"("+s.getSanPham().getTenSP()+")", Integer.toString(s.getSoLuong())};
                 modelCongDoan.addRow(row);
            }  
            }
        }   
    }//GEN-LAST:event_cbbCongDoanActionPerformed

    private void cbbTimTheoSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTimTheoSPActionPerformed
        modelPhanCong.setNumRows(0);
        if (modelcbbSanPham2.getSelectedItem().toString().equals("Tất cả")){
            addListPhanCong();
            return;
        }
        int stt = 0;
        for (BangPhanCong s: phanCong_Dao.getAllBangPhanCong()){
           if (modelcbbSanPham2.getSelectedItem().toString().equals(s.getCongDoan().getSanPham().getTenSP())){
           String [] row = {Integer.toString(stt),s.getCongNhan().getMaCN(),s.getCongNhan().getHoTen(),s.getCongDoan().getTenCD(),s.getCongDoan().getSanPham().getTenSP(),s.getCongDoan().getNgayBatDauString(),Integer.toString(s.getSoLuong())};
           modelPhanCong.addRow(row);
           stt++;
           }
        }
    }//GEN-LAST:event_cbbTimTheoSPActionPerformed

    private void tableCongNhanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCongNhanMouseClicked
    txtMaCN.setText(tableCongNhan.getValueAt(tableCongNhan.getSelectedRow(), 0).toString());
    txtHoTenCN.setText(tableCongNhan.getValueAt(tableCongNhan.getSelectedRow(), 1).toString());
    }//GEN-LAST:event_tableCongNhanMouseClicked

    private void tableCongDoanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCongDoanMouseClicked
        txtMaCD.setText(tableCongDoan.getValueAt(tableCongDoan.getSelectedRow(), 0).toString());
        txtTenCD.setText(tableCongDoan.getValueAt(tableCongDoan.getSelectedRow(), 1).toString());
    }//GEN-LAST:event_tableCongDoanMouseClicked

    private void tableDSPhanCongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDSPhanCongMouseClicked
        String maCN = tableDSPhanCong.getValueAt(tableDSPhanCong.getSelectedRow(), 1).toString();
        txtMaCN.setText(maCN);
        for (int row =0; row<modelDSCN.getRowCount(); row++){
            if (modelDSCN.getValueAt(row, 0).equals(maCN)){
                tableCongNhan.setRowSelectionInterval(row, row);
                break;
            }
        }
        txtHoTenCN.setText(tableDSPhanCong.getValueAt(tableDSPhanCong.getSelectedRow(), 2).toString());
        String maCD = phanCong_Dao.getAllBangPhanCong().get(tableDSPhanCong.getSelectedRow()).getCongDoan().getMaCD();
        txtMaCD.setText(maCD);
        for (int row =0; row<modelCongDoan.getRowCount(); row++){
            if (modelCongDoan.getValueAt(row, 0).equals(maCD)){
                tableCongDoan.setRowSelectionInterval(row, row);
                break;
            }
        }
        txtTenCD.setText(tableDSPhanCong.getValueAt(tableDSPhanCong.getSelectedRow(), 3).toString());
        txtSoLuong.setText(tableDSPhanCong.getValueAt(tableDSPhanCong.getSelectedRow(), 6).toString());
    }//GEN-LAST:event_tableDSPhanCongMouseClicked

    private void btnHuyXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyXoaActionPerformed
        comfirmDelete.setVisible(true);
    }//GEN-LAST:event_btnHuyXoaActionPerformed

    private void btnXacNhanXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanXoaActionPerformed
        if(phanCong_Dao.xoaBangPhanCong(phanCong_Dao.getAllBangPhanCong().get(tableDSPhanCong.getSelectedRow()).getMaBangPC())){
            comfirmDelete.setVisible(false);
            lbThongBao.setText("Xóa thành công!");
            addListPhanCong();
            addListCD();
            xoaTrang();
        }
        else{
            comfirmDelete.setVisible(false);
            lbThongBao.setText("Xóa thất bại");
            xoaTrang();
        }
    }//GEN-LAST:event_btnXacNhanXoaActionPerformed
    private void addListCN(){
        String [] row1 = {"Mã CN", "Họ tên"};
        modelDSCN = new DefaultTableModel(row1, 0);
        tableCongNhan.setModel(modelDSCN);
        ArrayList<CongNhan> listCN = congNhan_Dao.getAllCongNhan();
        for (CongNhan s:listCN){
           String [] row = {s.getMaCN(), s.getHoTen()};
           modelDSCN.addRow(row);
        }
    }
    private void addListCD(){
        
        String [] row1 = {"Mã CĐ", "Tên CĐ", "SL còn","CĐ trước"};
        modelCongDoan = new DefaultTableModel(row1, 0);
        tableCongDoan.setModel(modelCongDoan);
        ArrayList<CongDoan> listCD = congDoan_Dao.getAllCongDoan();
         tableCongDoan.getColumnModel().getColumn(2).setPreferredWidth(40);
         tableCongDoan.getColumnModel().getColumn(1).setPreferredWidth(120);
        for (CongDoan s:listCD){
            int slCon = s.getSoLuong();
            for (BangPhanCong pc: phanCong_Dao.getAllBangPhanCong()){
                if (pc.getCongDoan().getMaCD().equalsIgnoreCase(s.getMaCD()))
                {
                    slCon-=pc.getSoLuong();
                }
            } 
            String [] row = {s.getMaCD(),s.getTenCD()+"-"+"("+s.getSanPham().getTenSP()+")", Integer.toString(slCon),s.getTenCDTruoc()};
            modelCongDoan.addRow(row);
        }
    }
    private void addListPhanCong(){
        
        String [] row1 = {"STT", "Mã CN", "Họ tên","Công đoạn","Sản phẩm", "Ngày bắt đầu", "Số lượng"};
        modelPhanCong = new DefaultTableModel(row1, 0);
        tableDSPhanCong.setModel(modelPhanCong);
        ArrayList<BangPhanCong> listPhanCong = phanCong_Dao.getAllBangPhanCong();
        int stt = 0;
        for (BangPhanCong s:listPhanCong){
           String [] row = {Integer.toString(stt),s.getCongNhan().getMaCN(),s.getCongNhan().getHoTen(),s.getCongDoan().getTenCD(),s.getCongDoan().getSanPham().getTenSP(),s.getCongDoan().getNgayBatDauString(),Integer.toString(s.getSoLuong())};
           modelPhanCong.addRow(row);
           stt++;
        }
    }
    //add dữ liệu vào Các CBB tìm kiếm
    private void addCBB(){
        modelcbbTayNghe = new DefaultComboBoxModel<String>();
        modelcbbTayNghe.addElement("Tất cả");
        for (CongNhan s: congNhan_Dao.getAllCongNhan()){
            modelcbbTayNghe.addElement(""+s.getTayNghe());
        }
        cbbTayNghe.setModel(modelcbbTayNghe);
        
        modelcbbCongDoan = new DefaultComboBoxModel<String>();
        modelcbbCongDoan.addElement("Tất cả");
        for (CongDoan s: congDoan_Dao.getAllCongDoan()){
            modelcbbCongDoan.addElement(""+s.getTenCD()+"-("+s.getSanPham().getTenSP()+")");
        }
        cbbCongDoan.setModel(modelcbbCongDoan);
        
        modelcbbSanPham = new DefaultComboBoxModel<String>();
        modelcbbSanPham.addElement("Tất cả");
        for (SanPham s: sanPham_Dao.getAllSanPham()){
            modelcbbSanPham.addElement(""+s.getTenSP());
        }
        cbbTimSP.setModel(modelcbbSanPham);
        
        modelcbbSanPham2 = new DefaultComboBoxModel<String>();
        modelcbbSanPham2.addElement("Tất cả");
        for (SanPham s: sanPham_Dao.getAllSanPham()){
            modelcbbSanPham2.addElement(""+s.getTenSP());
        }
        cbbTimTheoSP.setModel(modelcbbSanPham2);
    }
    private boolean checkSLHTCDTruoc(CongDoan cd){
         ctBangCC_Dao = new ChiTietBangChamCong_DAO();
                int slCDTruoc=0;
                int check = 0;
                String maSP = cd.getMaCD().substring(0, 8);//lấy mã sp
                for(CongDoan s: congDoan_Dao.getAllCongDoanTheoMaSP(maSP)){ 
                    if(cd.getTenCDTruoc().equalsIgnoreCase(s.getTenCD())){
                        for(ChiTietBangChamCong ct: ctBangCC_Dao.getAllChiTietBangChamCong()){
                            if (ct.getBangPC().getCongDoan().getMaCD().equalsIgnoreCase(s.getMaCD())){
                                slCDTruoc+= ct.getSoLuong();//lấy số lượng công đoạn trước đã được hoàn thành
                                check = 1;
                            }
                        }
                    }
                }
                if(!cd.getTenCDTruoc().equals("")){
                   if(slCDTruoc<Integer.valueOf(txtSoLuong.getText())){
                    lbThongBao.setText("Công đoạn trước mới chỉ hoàn thành "+ Integer.toString(slCDTruoc)+" sản phẩm");
                    return false;
                    }
                }
                return true;
    }
    private void xoaTrang(){
        tableCongDoan.clearSelection();
        tableCongNhan.clearSelection();
        tableDSPhanCong.clearSelection();
        
        cbbCongDoan.setSelectedIndex(0);
        cbbTayNghe.setSelectedIndex(0);
        cbbTimSP.setSelectedIndex(0);
        cbbTimTheoSP.setSelectedIndex(0);
        
        txtHoTenCN.setText("");
        txtMaCD.setText("");
        txtMaCN.setText("");
        txtSoLuong.setText("");
        txtTenCD.setText("");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuyXoa;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnXacNhan;
    private javax.swing.JButton btnXacNhanXoa;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXuatFileExcel;
    private javax.swing.JComboBox<String> cbbCongDoan;
    private javax.swing.JComboBox<String> cbbTayNghe;
    private javax.swing.JComboBox<String> cbbTimSP;
    private javax.swing.JComboBox<String> cbbTimTheoSP;
    private javax.swing.JDialog comfirmDelete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lbThongBao;
    private javax.swing.JLabel lbXacNhanXoa;
    private javax.swing.JLabel lbttCN;
    private javax.swing.JPanel pPhanCong;
    private javax.swing.JPanel pTittle;
    private javax.swing.JPanel pTongQuan;
    private javax.swing.JPanel panelLocTheo;
    private javax.swing.JPanel panelThongTin;
    private javax.swing.JPanel panelXuLy;
    private javax.swing.JScrollPane scrollCD;
    private javax.swing.JScrollPane scrollDSCN;
    private javax.swing.JScrollPane scrollDSPhanCong;
    private javax.swing.JTable tableCongDoan;
    private javax.swing.JTable tableCongNhan;
    private javax.swing.JTable tableDSPhanCong;
    private javax.swing.JTextField txtHoTenCN;
    private javax.swing.JTextField txtMaCD;
    private javax.swing.JTextField txtMaCN;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenCD;
    // End of variables declaration//GEN-END:variables
    private BangPhanCong_DAO phanCong_Dao;
    private CongNhan_DAO congNhan_Dao;
    private CongDoan_DAO congDoan_Dao;
    private SanPham_DAO sanPham_Dao;
    private ChiTietBangChamCong_DAO ctBangCC_Dao;
    
    private DefaultTableModel modelDSCN;
    private DefaultTableModel modelPhanCong;
    private DefaultTableModel modelCongDoan;
    private DefaultComboBoxModel<String> modelcbbTayNghe;
    private DefaultComboBoxModel<String> modelcbbCongDoan;
    private DefaultComboBoxModel<String> modelcbbSanPham;
    private DefaultComboBoxModel<String> modelcbbSanPham2;
}
