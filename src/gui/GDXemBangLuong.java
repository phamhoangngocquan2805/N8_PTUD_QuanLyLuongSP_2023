/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import dao.BangChamCongCongNhan_DAO;
import dao.BangChamCongNhanVien_DAO;
import dao.BangLuongCongNhan_DAO;
import dao.BangLuongNhanVien_DAO;
import dao.ChiTietBangChamCong_DAO;
import dao.CongNhan_DAO;
import dao.NhanVienHanhChinh_DAO;
import entity.BangChamCongCongNhan;
import entity.BangLuongCongNhan;
import entity.BangLuongNhanVien;
import entity.ChiTietBangChamCong;
import entity.CongNhan;
import entity.NhanVienHanhChinh;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.NumberFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Locale;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author acer
 */
public class GDXemBangLuong extends javax.swing.JPanel {

    /**
     * Creates new form GDXemBangLuong
     */
    public GDXemBangLuong() {
        initComponents();
        jComboBoxNamNV.setSelectedItem(LocalDate.now().getYear());
        jComboBoxThangNV.setSelectedItem(LocalDate.now().getMonthValue());
        dateTimeFormatter = DateTimeFormatter.ofPattern("dd-MM-yyyy"); //format ngày
        congNhan_DAO = new CongNhan_DAO();
        chamCongCongNhan_DAO = new BangChamCongCongNhan_DAO();
        chiTietBangChamCong_DAO = new ChiTietBangChamCong_DAO();
        dsBCC = chamCongCongNhan_DAO.getAllBangChamCongCongNhan();
        dsCT = chiTietBangChamCong_DAO.getAllChiTietBangChamCongVer2();
        loadComponentsTableBangLuongNV();
        loadComponentsTableBangLuongCN();
        resetTableBangLuongNV();
        resetTableBangLuongCN();

//        System.out.println("gui.GDXemBangLuong.<init>()" + LocalDate.now().getMonthValue() + LocalDate.now().getYear());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pXemBangLuong = new javax.swing.JPanel();
        pTittle = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        pTongQuan = new javax.swing.JPanel();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanelXemLuongNVHC = new javax.swing.JPanel();
        jPanelXuLyNV = new javax.swing.JPanel();
        jLabel1ThangNV = new javax.swing.JLabel();
        jComboBoxThangNV = new javax.swing.JComboBox<>();
        jComboBoxNamNV = new javax.swing.JComboBox<>();
        jLabelNamNV = new javax.swing.JLabel();
        jButtonInPDFNV = new javax.swing.JButton();
        jLabelTimKiemNV = new javax.swing.JLabel();
        jTextFieldTimKiemNV = new javax.swing.JTextField();
        jButtonTimKiemNV = new javax.swing.JButton();
        jPanelDSBangLuongNV = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableBangLuongNV = new javax.swing.JTable();
        jPanelXemLuongCN = new javax.swing.JPanel();
        jPanelDSBangLuongCN = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableBangLuongCN = new javax.swing.JTable();
        jPanelXuLyNV1 = new javax.swing.JPanel();
        jLabel1ThangNV1 = new javax.swing.JLabel();
        jComboBoxThangCN = new javax.swing.JComboBox<>();
        jComboBoxNamCN = new javax.swing.JComboBox<>();
        jLabelNamCN = new javax.swing.JLabel();
        jButtonInPDFCN = new javax.swing.JButton();
        jLabelTimKiemCN = new javax.swing.JLabel();
        jTextFieldTimKiemCN = new javax.swing.JTextField();
        jButtonTimKiemCN = new javax.swing.JButton();

        pXemBangLuong.setPreferredSize(new java.awt.Dimension(958, 735));

        pTittle.setBackground(new java.awt.Color(85, 167, 222));
        pTittle.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 5, 0, 0, new java.awt.Color(233, 231, 231)));

        jLabel15.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(234, 233, 233));
        jLabel15.setText("XEM BẢNG LƯƠNG");

        javax.swing.GroupLayout pTittleLayout = new javax.swing.GroupLayout(pTittle);
        pTittle.setLayout(pTittleLayout);
        pTittleLayout.setHorizontalGroup(
            pTittleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTittleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pTittleLayout.setVerticalGroup(
            pTittleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        pTongQuan.setBackground(new java.awt.Color(217, 217, 217));
        pTongQuan.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 5, 0, 0, new java.awt.Color(233, 231, 231)));

        jPanelXemLuongNVHC.setBackground(new java.awt.Color(217, 217, 217));

        jPanelXuLyNV.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1ThangNV.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1ThangNV.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1ThangNV.setText("Tháng");

        jComboBoxThangNV.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jComboBoxThangNV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        jComboBoxThangNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxThangNVActionPerformed(evt);
            }
        });

        jComboBoxNamNV.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jComboBoxNamNV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2023" }));
        jComboBoxNamNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxNamNVActionPerformed(evt);
            }
        });

        jLabelNamNV.setBackground(new java.awt.Color(255, 255, 255));
        jLabelNamNV.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelNamNV.setText("Năm");

        jButtonInPDFNV.setBackground(new java.awt.Color(85, 167, 222));
        jButtonInPDFNV.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonInPDFNV.setForeground(new java.awt.Color(255, 255, 255));
        jButtonInPDFNV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/file-regular.png"))); // NOI18N
        jButtonInPDFNV.setMnemonic('E');
        jButtonInPDFNV.setText("Xuất Excel");
        jButtonInPDFNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInPDFNVActionPerformed(evt);
            }
        });

        jLabelTimKiemNV.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelTimKiemNV.setText("Tìm kiếm:");

        jTextFieldTimKiemNV.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldTimKiemNV.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldTimKiemNVFocusLost(evt);
            }
        });
        jTextFieldTimKiemNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTimKiemNVActionPerformed(evt);
            }
        });
        jTextFieldTimKiemNV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldTimKiemNVKeyPressed(evt);
            }
        });

        jButtonTimKiemNV.setBackground(new java.awt.Color(85, 167, 222));
        jButtonTimKiemNV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/magnifying-glass-solid.png"))); // NOI18N
        jButtonTimKiemNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTimKiemNVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelXuLyNVLayout = new javax.swing.GroupLayout(jPanelXuLyNV);
        jPanelXuLyNV.setLayout(jPanelXuLyNVLayout);
        jPanelXuLyNVLayout.setHorizontalGroup(
            jPanelXuLyNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelXuLyNVLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1ThangNV)
                .addGap(18, 18, 18)
                .addComponent(jComboBoxThangNV, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabelNamNV, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxNamNV, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabelTimKiemNV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldTimKiemNV, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonTimKiemNV, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButtonInPDFNV, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180))
        );
        jPanelXuLyNVLayout.setVerticalGroup(
            jPanelXuLyNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelXuLyNVLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanelXuLyNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonInPDFNV)
                    .addGroup(jPanelXuLyNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldTimKiemNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelTimKiemNV))
                    .addComponent(jButtonTimKiemNV, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelXuLyNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelNamNV)
                        .addComponent(jComboBoxNamNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelXuLyNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1ThangNV)
                        .addComponent(jComboBoxThangNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanelDSBangLuongNV.setBackground(new java.awt.Color(255, 255, 255));
        jPanelDSBangLuongNV.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách bảng lương", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(195, 95, 95))); // NOI18N

        jTableBangLuongNV.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTableBangLuongNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableBangLuongNV.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableBangLuongNV.setRowHeight(22);
        jTableBangLuongNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableBangLuongNVMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableBangLuongNV);

        javax.swing.GroupLayout jPanelDSBangLuongNVLayout = new javax.swing.GroupLayout(jPanelDSBangLuongNV);
        jPanelDSBangLuongNV.setLayout(jPanelDSBangLuongNVLayout);
        jPanelDSBangLuongNVLayout.setHorizontalGroup(
            jPanelDSBangLuongNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDSBangLuongNVLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 908, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelDSBangLuongNVLayout.setVerticalGroup(
            jPanelDSBangLuongNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDSBangLuongNVLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelXemLuongNVHCLayout = new javax.swing.GroupLayout(jPanelXemLuongNVHC);
        jPanelXemLuongNVHC.setLayout(jPanelXemLuongNVHCLayout);
        jPanelXemLuongNVHCLayout.setHorizontalGroup(
            jPanelXemLuongNVHCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelXemLuongNVHCLayout.createSequentialGroup()
                .addGroup(jPanelXemLuongNVHCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelXuLyNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelXemLuongNVHCLayout.createSequentialGroup()
                        .addComponent(jPanelDSBangLuongNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 17, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelXemLuongNVHCLayout.setVerticalGroup(
            jPanelXemLuongNVHCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelXemLuongNVHCLayout.createSequentialGroup()
                .addComponent(jPanelXuLyNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelDSBangLuongNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Nhân viên hành chính", jPanelXemLuongNVHC);

        jPanelXemLuongCN.setBackground(new java.awt.Color(217, 217, 217));

        jPanelDSBangLuongCN.setBackground(new java.awt.Color(255, 255, 255));
        jPanelDSBangLuongCN.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách bảng lương", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(195, 95, 95))); // NOI18N

        jTableBangLuongCN.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTableBangLuongCN.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableBangLuongCN.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableBangLuongCN.setRowHeight(22);
        jTableBangLuongCN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableBangLuongCNMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTableBangLuongCN);

        javax.swing.GroupLayout jPanelDSBangLuongCNLayout = new javax.swing.GroupLayout(jPanelDSBangLuongCN);
        jPanelDSBangLuongCN.setLayout(jPanelDSBangLuongCNLayout);
        jPanelDSBangLuongCNLayout.setHorizontalGroup(
            jPanelDSBangLuongCNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDSBangLuongCNLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 925, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelDSBangLuongCNLayout.setVerticalGroup(
            jPanelDSBangLuongCNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 547, Short.MAX_VALUE)
        );

        jPanelXuLyNV1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1ThangNV1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1ThangNV1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1ThangNV1.setText("Tháng");

        jComboBoxThangCN.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jComboBoxThangCN.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        jComboBoxThangCN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxThangCNActionPerformed(evt);
            }
        });

        jComboBoxNamCN.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jComboBoxNamCN.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2023" }));
        jComboBoxNamCN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxNamCNActionPerformed(evt);
            }
        });

        jLabelNamCN.setBackground(new java.awt.Color(255, 255, 255));
        jLabelNamCN.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelNamCN.setText("Năm");

        jButtonInPDFCN.setBackground(new java.awt.Color(85, 167, 222));
        jButtonInPDFCN.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonInPDFCN.setForeground(new java.awt.Color(255, 255, 255));
        jButtonInPDFCN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/file-regular.png"))); // NOI18N
        jButtonInPDFCN.setMnemonic('E');
        jButtonInPDFCN.setText("Xuất Excel");
        jButtonInPDFCN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInPDFCNActionPerformed(evt);
            }
        });

        jLabelTimKiemCN.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelTimKiemCN.setText("Tìm kiếm:");

        jTextFieldTimKiemCN.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldTimKiemCN.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldTimKiemCNFocusLost(evt);
            }
        });
        jTextFieldTimKiemCN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTimKiemCNActionPerformed(evt);
            }
        });
        jTextFieldTimKiemCN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldTimKiemCNKeyPressed(evt);
            }
        });

        jButtonTimKiemCN.setBackground(new java.awt.Color(85, 167, 222));
        jButtonTimKiemCN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/magnifying-glass-solid.png"))); // NOI18N
        jButtonTimKiemCN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTimKiemCNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelXuLyNV1Layout = new javax.swing.GroupLayout(jPanelXuLyNV1);
        jPanelXuLyNV1.setLayout(jPanelXuLyNV1Layout);
        jPanelXuLyNV1Layout.setHorizontalGroup(
            jPanelXuLyNV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelXuLyNV1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1ThangNV1)
                .addGap(18, 18, 18)
                .addComponent(jComboBoxThangCN, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabelNamCN, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxNamCN, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabelTimKiemCN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldTimKiemCN, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonTimKiemCN, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButtonInPDFCN, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180))
        );
        jPanelXuLyNV1Layout.setVerticalGroup(
            jPanelXuLyNV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelXuLyNV1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanelXuLyNV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonInPDFCN)
                    .addGroup(jPanelXuLyNV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldTimKiemCN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelTimKiemCN))
                    .addComponent(jButtonTimKiemCN, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelXuLyNV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelNamCN)
                        .addComponent(jComboBoxNamCN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelXuLyNV1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1ThangNV1)
                        .addComponent(jComboBoxThangCN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelXemLuongCNLayout = new javax.swing.GroupLayout(jPanelXemLuongCN);
        jPanelXemLuongCN.setLayout(jPanelXemLuongCNLayout);
        jPanelXemLuongCNLayout.setHorizontalGroup(
            jPanelXemLuongCNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelXemLuongCNLayout.createSequentialGroup()
                .addGroup(jPanelXemLuongCNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelXuLyNV1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelDSBangLuongCN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelXemLuongCNLayout.setVerticalGroup(
            jPanelXemLuongCNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelXemLuongCNLayout.createSequentialGroup()
                .addComponent(jPanelXuLyNV1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelDSBangLuongCN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Công nhân", jPanelXemLuongCN);

        javax.swing.GroupLayout pTongQuanLayout = new javax.swing.GroupLayout(pTongQuan);
        pTongQuan.setLayout(pTongQuanLayout);
        pTongQuanLayout.setHorizontalGroup(
            pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4)
        );
        pTongQuanLayout.setVerticalGroup(
            pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4)
        );

        javax.swing.GroupLayout pXemBangLuongLayout = new javax.swing.GroupLayout(pXemBangLuong);
        pXemBangLuong.setLayout(pXemBangLuongLayout);
        pXemBangLuongLayout.setHorizontalGroup(
            pXemBangLuongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pTittle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pTongQuan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pXemBangLuongLayout.setVerticalGroup(
            pXemBangLuongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pXemBangLuongLayout.createSequentialGroup()
                .addComponent(pTittle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pTongQuan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 958, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pXemBangLuong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 735, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pXemBangLuong, javax.swing.GroupLayout.DEFAULT_SIZE, 745, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonInPDFNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInPDFNVActionPerformed
        // TODO add your handling code here:
        try {
            String fileName = "Bảng lương tháng " + jComboBoxThangNV.getSelectedItem();
            XSSFWorkbook wordkbook = new XSSFWorkbook();
            XSSFSheet sheet = wordkbook.createSheet("Bảng lương");
            XSSFSheet sheet1 = wordkbook.createSheet("Phiếu lương");
            XSSFRow row = null;

            Cell cell = null;
            // Create a font with a bigger size
            XSSFFont font = wordkbook.createFont();
            font.setFontHeightInPoints((short) 14); // Set the font size

            // Create a cell style with center alignment and the bigger font
            XSSFCellStyle style = wordkbook.createCellStyle();
            style.setAlignment(HorizontalAlignment.CENTER);
            style.setFont(font); // Apply the font to the style

            // Create the company name row and merge cells
            row = sheet.createRow(0);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("Công ty TNHH may mặc Thịnh Vượng");
            cell.setCellStyle(style); // Apply the style to the cell
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 0, 12)); // Merge cells from column 0 to 12

            // Create the title row and merge cells
            row = sheet.createRow(1);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue(fileName);
            cell.setCellStyle(style); // Apply the style to the cell
            sheet.addMergedRegion(new CellRangeAddress(1, 1, 0, 12)); // Merge cells from column 0 to 12
//            row = sheet.createRow(1);
            row = sheet.createRow(3);
            sheet.setColumnWidth(0, 3 * 256);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("STT");

            sheet.setColumnWidth(1, 20 * 256);
            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("Tên nhân viên");

            sheet.setColumnWidth(2, 15 * 256);
            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue("Ngày tính lương");

            sheet.setColumnWidth(3, 15 * 256);
            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue("Số ngày làm");

            sheet.setColumnWidth(4, 15 * 256);
            cell = row.createCell(4, CellType.STRING);
            cell.setCellValue("Số ngày nghỉ");

            sheet.setColumnWidth(5, 12 * 256);
            cell = row.createCell(5, CellType.STRING);
            cell.setCellValue("Lương chính");

            sheet.setColumnWidth(6, 13 * 256);
            cell = row.createCell(6, CellType.STRING);
            cell.setCellValue("Lương tăng ca");

            sheet.setColumnWidth(7, 12 * 256);
            cell = row.createCell(7, CellType.STRING);
            cell.setCellValue("Tiền ứng");

            sheet.setColumnWidth(8, 12 * 256);
            cell = row.createCell(8, CellType.STRING);
            cell.setCellValue("Tiền phụ cấp");

            sheet.setColumnWidth(9, 15 * 256);
            cell = row.createCell(9, CellType.STRING);
            cell.setCellValue("Tiền chuyên cần");

            sheet.setColumnWidth(10, 15 * 256);
            cell = row.createCell(10, CellType.STRING);
            cell.setCellValue("Bảo hiểm xã hội");

            sheet.setColumnWidth(11, 12 * 256);
            cell = row.createCell(11, CellType.STRING);
            cell.setCellValue("Thực lãnh");

            sheet.setColumnWidth(12, 8 * 256);
            cell = row.createCell(12, CellType.STRING);
            cell.setCellValue("Ghi chú");

            int rows = jTableBangLuongNV.getRowCount();
            for (int i = 0; i < rows; i++) {
                Object[] obj = {modelBangLuongNV.getValueAt(i, 1),
                    modelBangLuongNV.getValueAt(i, 2),
                    modelBangLuongNV.getValueAt(i, 3),
                    modelBangLuongNV.getValueAt(i, 4),
                    modelBangLuongNV.getValueAt(i, 5),
                    modelBangLuongNV.getValueAt(i, 6),
                    modelBangLuongNV.getValueAt(i, 7),
                    modelBangLuongNV.getValueAt(i, 8),
                    modelBangLuongNV.getValueAt(i, 9),
                    modelBangLuongNV.getValueAt(i, 10),
                    modelBangLuongNV.getValueAt(i, 11),};

                row = sheet.createRow(4 + i);

                cell = row.createCell(0, CellType.NUMERIC);
                cell.setCellValue(i + 1);

                cell = row.createCell(1, CellType.STRING);
                cell.setCellValue(obj[0].toString());

                cell = row.createCell(2, CellType.STRING);
                cell.setCellValue(obj[1].toString());

                cell = row.createCell(3, CellType.STRING);
                cell.setCellValue(obj[2].toString());

                cell = row.createCell(4, CellType.STRING);
                cell.setCellValue(obj[3].toString());

                cell = row.createCell(5, CellType.STRING);
                cell.setCellValue(obj[4].toString());

                cell = row.createCell(6, CellType.STRING);
                cell.setCellValue(obj[5].toString());

                cell = row.createCell(7, CellType.STRING);
                cell.setCellValue(obj[6].toString());

                cell = row.createCell(8, CellType.STRING);
                cell.setCellValue(obj[7].toString());

                cell = row.createCell(9, CellType.STRING);
                cell.setCellValue(obj[8].toString());

                cell = row.createCell(10, CellType.STRING);
                cell.setCellValue(obj[9].toString());

                cell = row.createCell(11, CellType.STRING);
                cell.setCellValue(obj[10].toString());
            }

            File f = new File("D://" + fileName + ".xlsx");
            try {
                FileOutputStream fis = new FileOutputStream(f);
                wordkbook.write(fis);
                fis.close();
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();

            } catch (IOException ex) {
                ex.printStackTrace();
            }
            JOptionPane.showMessageDialog(this, "In thàng công");
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lõi mở file");
        }
    }//GEN-LAST:event_jButtonInPDFNVActionPerformed

    private void jComboBoxThangNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxThangNVActionPerformed
        // TODO add your handling code here:
        resetTableBangLuongNV();
    }//GEN-LAST:event_jComboBoxThangNVActionPerformed

    private void jComboBoxNamNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxNamNVActionPerformed
        // TODO add your handling code here:
        resetTableBangLuongNV();
    }//GEN-LAST:event_jComboBoxNamNVActionPerformed

    private void jComboBoxThangCNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxThangCNActionPerformed
        // TODO add your handling code here:
        resetTableBangLuongCN();
    }//GEN-LAST:event_jComboBoxThangCNActionPerformed

    private void jComboBoxNamCNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxNamCNActionPerformed
        // TODO add your handling code here:
        resetTableBangLuongCN();
    }//GEN-LAST:event_jComboBoxNamCNActionPerformed

    private void jButtonInPDFCNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInPDFCNActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        try {
            String fileName = "Bảng lương tháng " + jComboBoxThangNV.getSelectedItem();
            XSSFWorkbook wordkbook = new XSSFWorkbook();
            XSSFSheet sheet = wordkbook.createSheet("Bảng lương");
            XSSFSheet sheet1 = wordkbook.createSheet("Phiếu lương");
            XSSFRow row = null;

            Cell cell = null;
            // Create a font with a bigger size
            XSSFFont font = wordkbook.createFont();
            font.setFontHeightInPoints((short) 14); // Set the font size

            // Create a cell style with center alignment and the bigger font
            XSSFCellStyle style = wordkbook.createCellStyle();
            style.setAlignment(HorizontalAlignment.CENTER);
            style.setFont(font); // Apply the font to the style

            // Create the company name row and merge cells
            row = sheet.createRow(0);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("Công ty TNHH may mặc Thịnh Vượng");
            cell.setCellStyle(style); // Apply the style to the cell
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 0, 12)); // Merge cells from column 0 to 12

            // Create the title row and merge cells
            row = sheet.createRow(1);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue(fileName);
            cell.setCellStyle(style); // Apply the style to the cell
            sheet.addMergedRegion(new CellRangeAddress(1, 1, 0, 12)); // Merge cells from column 0 to 12
//            row = sheet.createRow(1);
            row = sheet.createRow(3);
            sheet.setColumnWidth(0, 3 * 256);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("STT");

            sheet.setColumnWidth(1, 20 * 256);
            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("Tên công nhân");

            sheet.setColumnWidth(2, 15 * 256);
            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue("Ngày tính lương");

            sheet.setColumnWidth(3, 15 * 256);
            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue("Số ngày làm");

            sheet.setColumnWidth(4, 15 * 256);
            cell = row.createCell(4, CellType.STRING);
            cell.setCellValue("Số ngày nghỉ");

            sheet.setColumnWidth(5, 12 * 256);
            cell = row.createCell(5, CellType.STRING);
            cell.setCellValue("Lương sản phẩm");

            sheet.setColumnWidth(6, 13 * 256);
            cell = row.createCell(6, CellType.STRING);
            cell.setCellValue("Lương tăng ca");

            sheet.setColumnWidth(7, 12 * 256);
            cell = row.createCell(7, CellType.STRING);
            cell.setCellValue("Tiền ứng");

            sheet.setColumnWidth(8, 12 * 256);
            cell = row.createCell(8, CellType.STRING);
            cell.setCellValue("Tiền phụ cấp");

            sheet.setColumnWidth(9, 15 * 256);
            cell = row.createCell(9, CellType.STRING);
            cell.setCellValue("Tiền chuyên cần");

            sheet.setColumnWidth(10, 15 * 256);
            cell = row.createCell(10, CellType.STRING);
            cell.setCellValue("Bảo hiểm xã hội");

            sheet.setColumnWidth(11, 12 * 256);
            cell = row.createCell(11, CellType.STRING);
            cell.setCellValue("Thực lãnh");

            sheet.setColumnWidth(12, 8 * 256);
            cell = row.createCell(12, CellType.STRING);
            cell.setCellValue("Ghi chú");

            int rows = jTableBangLuongNV.getRowCount();
            for (int i = 0; i < rows; i++) {
                Object[] obj = {modelBangLuongNV.getValueAt(i, 1),
                    modelBangLuongNV.getValueAt(i, 2),
                    modelBangLuongNV.getValueAt(i, 3),
                    modelBangLuongNV.getValueAt(i, 4),
                    modelBangLuongNV.getValueAt(i, 5),
                    modelBangLuongNV.getValueAt(i, 6),
                    modelBangLuongNV.getValueAt(i, 7),
                    modelBangLuongNV.getValueAt(i, 8),
                    modelBangLuongNV.getValueAt(i, 9),
                    modelBangLuongNV.getValueAt(i, 10),
                    modelBangLuongNV.getValueAt(i, 11),};

                row = sheet.createRow(4 + i);

                cell = row.createCell(0, CellType.NUMERIC);
                cell.setCellValue(i + 1);

                cell = row.createCell(1, CellType.STRING);
                cell.setCellValue(obj[0].toString());

                cell = row.createCell(2, CellType.STRING);
                cell.setCellValue(obj[1].toString());

                cell = row.createCell(3, CellType.STRING);
                cell.setCellValue(obj[2].toString());

                cell = row.createCell(4, CellType.STRING);
                cell.setCellValue(obj[3].toString());

                cell = row.createCell(5, CellType.STRING);
                cell.setCellValue(obj[4].toString());

                cell = row.createCell(6, CellType.STRING);
                cell.setCellValue(obj[5].toString());

                cell = row.createCell(7, CellType.STRING);
                cell.setCellValue(obj[6].toString());

                cell = row.createCell(8, CellType.STRING);
                cell.setCellValue(obj[7].toString());

                cell = row.createCell(9, CellType.STRING);
                cell.setCellValue(obj[8].toString());

                cell = row.createCell(10, CellType.STRING);
                cell.setCellValue(obj[9].toString());

                cell = row.createCell(11, CellType.STRING);
                cell.setCellValue(obj[10].toString());
            }

            File f = new File("D://" + fileName + ".xlsx");
            try {
                FileOutputStream fis = new FileOutputStream(f);
                wordkbook.write(fis);
                fis.close();
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();

            } catch (IOException ex) {
                ex.printStackTrace();
            }
            JOptionPane.showMessageDialog(this, "In thàng công");
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lõi mở file");
        }
    }//GEN-LAST:event_jButtonInPDFCNActionPerformed

    private void jTableBangLuongNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableBangLuongNVMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            PrintReviewNV printReviewNV = new PrintReviewNV();
            int i = jTableBangLuongNV.getSelectedRow();
            Object[] obj = {
                modelBangLuongNV.getValueAt(i, 0),
                modelBangLuongNV.getValueAt(i, 1),
                modelBangLuongNV.getValueAt(i, 2),
                modelBangLuongNV.getValueAt(i, 3),
                modelBangLuongNV.getValueAt(i, 4),
                modelBangLuongNV.getValueAt(i, 5),
                modelBangLuongNV.getValueAt(i, 6),
                modelBangLuongNV.getValueAt(i, 7),
                modelBangLuongNV.getValueAt(i, 8),
                modelBangLuongNV.getValueAt(i, 9),
                modelBangLuongNV.getValueAt(i, 10),
                modelBangLuongNV.getValueAt(i, 11),};
            printReviewNV.setGiaTri(obj);
            JDialog dialog = new JDialog();
            dialog.setTitle("Print review");
            dialog.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/image/logo.png")));
            dialog.getContentPane().add(printReviewNV);
            dialog.pack();
            dialog.setLocationRelativeTo(null);
            dialog.setVisible(true);
        }
    }//GEN-LAST:event_jTableBangLuongNVMouseClicked

    private void jTableBangLuongCNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableBangLuongCNMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            PrintReviewCN printReviewCN = new PrintReviewCN();
            int i = jTableBangLuongCN.getSelectedRow();
            Object[] obj = {
                modelBangLuongCN.getValueAt(i, 0),
                modelBangLuongCN.getValueAt(i, 1),
                modelBangLuongCN.getValueAt(i, 2),
                modelBangLuongCN.getValueAt(i, 3),
                modelBangLuongCN.getValueAt(i, 4),
                modelBangLuongCN.getValueAt(i, 5),
                modelBangLuongCN.getValueAt(i, 6),
                modelBangLuongCN.getValueAt(i, 7),
                modelBangLuongCN.getValueAt(i, 8),
                modelBangLuongCN.getValueAt(i, 9),
                modelBangLuongCN.getValueAt(i, 10),
                modelBangLuongCN.getValueAt(i, 11),};
            ArrayList<BangChamCongCongNhan> dsBCCCN = new ArrayList<BangChamCongCongNhan>();
            ArrayList<ChiTietBangChamCong> dsChiTietChamCong = new ArrayList<ChiTietBangChamCong>();
            ArrayList<Object[]> dsCT = new ArrayList<>();
//            int rows = jTableBangChamCong.getRowCount();
            String maCN = modelBangLuongCN.getValueAt(jTableBangLuongCN.getSelectedRow(), 0).toString().trim().substring(4);
            CongNhan cn = congNhan_DAO.getCongNhanTheoMa(maCN);
            String month = modelBangLuongCN.getValueAt(i, 0).toString().substring(2, 4);
            String year = modelBangLuongCN.getValueAt(i, 0).toString().substring(0, 2);
            //Lấy ra danh sách bảng chấm công tháng đó của nhân viên được chọn trên table
            for (BangChamCongCongNhan bcc : dsBCC) {
                if (bcc.getCn().getMaCN().equalsIgnoreCase(cn.getMaCN())
                        && bcc.getNgayChamCongString().substring(5, 7).equals(month)
                        && bcc.getNgayChamCongString().substring(2, 4).equals(year)) {
                    dsBCCCN.add(bcc);
                }
            }

            for (BangChamCongCongNhan bcc : dsBCCCN) {
                for (ChiTietBangChamCong chiTiet : this.dsCT) {
                    if (chiTiet.getBangCC().getMaBangChamCong().equalsIgnoreCase(bcc.getMaBangChamCong())) {
                        Object[] rowData = {chiTiet.getBangCC().getMaBangChamCong(), chiTiet.getBangCC().getNgayChamCongString(), chiTiet.getBangPC().getCongDoan().getSanPham().getTenSP(), chiTiet.getBangPC().getCongDoan().getTenCD(), chiTiet.getSoLuong()
                        };
                        dsCT.add(rowData);
                    }
                }
            }
            printReviewCN.setGiaTri(obj, dsCT);
            JDialog dialog = new JDialog();
            dialog.setTitle("Print review");
            dialog.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/image/logo.png")));
            dialog.getContentPane().add(printReviewCN);
            dialog.pack();
            dialog.setLocationRelativeTo(null);
            dialog.setVisible(true);
        }
    }//GEN-LAST:event_jTableBangLuongCNMouseClicked

    private void jTextFieldTimKiemNVFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldTimKiemNVFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTimKiemNVFocusLost

    private void jTextFieldTimKiemNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTimKiemNVActionPerformed
        // TODO add your handling code here:
        jButtonTimKiemNV.doClick();
    }//GEN-LAST:event_jTextFieldTimKiemNVActionPerformed

    private void jTextFieldTimKiemNVKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTimKiemNVKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTimKiemNVKeyPressed

    private void jButtonTimKiemNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTimKiemNVActionPerformed
        // TODO add your handling code here:
        ArrayList<BangLuongNhanVien> ds = new ArrayList<BangLuongNhanVien>();
        Pattern pattern = Pattern.compile(jTextFieldTimKiemNV.getText(), Pattern.CASE_INSENSITIVE);

        String stringTimKiem = jTextFieldTimKiemNV.getText().trim();
        for (BangLuongNhanVien bl : bangLuongNhanVien_DAO.getAllBangLuongNhanVien()) {
            Matcher matcher = pattern.matcher(bl.getNv().getHoTen());
            if (matcher.find()) {
                ds.add(bl);
            }
            matcher = pattern.matcher(bl.getNv().getMaNV());
            if (matcher.find()) {
                ds.add(bl);
            }
        }
        resetTableBangLuongNVTheoDS(ds);
    }//GEN-LAST:event_jButtonTimKiemNVActionPerformed

    private void jTextFieldTimKiemCNFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldTimKiemCNFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTimKiemCNFocusLost

    private void jTextFieldTimKiemCNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTimKiemCNActionPerformed
        // TODO add your handling code here:s
        jButtonTimKiemCN.doClick();
    }//GEN-LAST:event_jTextFieldTimKiemCNActionPerformed

    private void jTextFieldTimKiemCNKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTimKiemCNKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTimKiemCNKeyPressed

    private void jButtonTimKiemCNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTimKiemCNActionPerformed
        // TODO add your handling code here:
        ArrayList<BangLuongCongNhan> ds = new ArrayList<BangLuongCongNhan>();
        Pattern pattern = Pattern.compile(jTextFieldTimKiemCN.getText(), Pattern.CASE_INSENSITIVE);

        String stringTimKiem = jTextFieldTimKiemCN.getText().trim();
        for (BangLuongCongNhan bl : bangLuongCongNhan_DAO.getAllBangLuongCongNhan()) {
            Matcher matcher = pattern.matcher(bl.getCongNhan().getHoTen());
            if (matcher.find()) {
                ds.add(bl);
            }
            matcher = pattern.matcher(bl.getCongNhan().getMaCN());
            if (matcher.find()) {
                ds.add(bl);
            }
        }
        resetTableBangLuongCNTheoDS(ds);
    }//GEN-LAST:event_jButtonTimKiemCNActionPerformed

    void loadComponentsTableBangLuongNV() {
        String[] headers = {
            "Mã bảng lương",
            "Tên nhân viên",
            "Ngày tính lương",
            "Số ngày làm",
            "Số ngày nghỉ",
            "Lương chính",
            "Lương tăng ca",
            "Tiền ứng",
            "Tiền phụ cấp",
            "Tiền chuyên cần",
            "Bảo hiểm xã hội",
            "Thực lãnh"};
        modelBangLuongNV = new DefaultTableModel(headers, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                // all cells false
                return false;
            }
        };
        jTableBangLuongNV.setModel(modelBangLuongNV);
        jTableBangLuongNV.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = jTableBangLuongNV.getSelectedRow();
                }
            }
        });
    }

    void loadComponentsTableBangLuongCN() {
        String[] headers = {
            "Mã bảng lương",
            "Tên công nhân",
            "Ngày tính lương",
            "Số ngày làm",
            "Số ngày nghỉ",
            "Lương SP",
            "Lương tăng ca",
            "Tiền ứng",
            "Tiền phụ cấp",
            "Tiền chuyên cần",
            "Bảo hiểm xã hội",
            "Thực lãnh"};
        modelBangLuongCN = new DefaultTableModel(headers, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                // all cells false
                return false;
            }
        };
        jTableBangLuongCN.setModel(modelBangLuongCN);
        jTableBangLuongCN.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = jTableBangLuongCN.getSelectedRow();
                }
            }
        });
    }

    void resetTableBangLuongNV() {
        modelBangLuongNV.setRowCount(0);
        bangLuongNhanVien_DAO = new BangLuongNhanVien_DAO();
        String thang = String.format("%02d", Integer.parseInt(jComboBoxThangNV.getSelectedItem().toString()));
        String nam = jComboBoxNamNV.getSelectedItem().toString().substring(2);
        ArrayList<BangLuongNhanVien> danhSachBangLuong = bangLuongNhanVien_DAO.getDSBangLuongNhanVienTheoThangNam(thang, nam);
        Locale vietNam = new Locale("vi", "VN");
        NumberFormat numberFormat = NumberFormat.getInstance(vietNam);
        numberFormat.setMaximumFractionDigits(0); //Format tiền vnd
        for (BangLuongNhanVien bangLuong : danhSachBangLuong) {
            Object[] arr = {
                bangLuong.getMaBangLuong(),
                bangLuong.getNv().getHoTen(),
                bangLuong.getNgayTinhLuong().format(dateTimeFormatter),
                bangLuong.getSoNgayLam(),
                bangLuong.getSoNgayNghi(),
                numberFormat.format(bangLuong.getLuongChinh()) + " ₫",
                numberFormat.format(bangLuong.getLuongTangCa()) + " ₫",
                numberFormat.format(bangLuong.getTienUng()) + " ₫",
                numberFormat.format(bangLuong.getTienPhuCap()) + " ₫",
                numberFormat.format(bangLuong.getTienChuyenCan()) + " ₫",
                numberFormat.format(bangLuong.getBaoHiemXaHoi()) + " ₫",
                numberFormat.format(bangLuong.getThucLanh()) + " ₫"
            };
            modelBangLuongNV.addRow(arr);
        }
    }

    void resetTableBangLuongNVTheoDS(ArrayList<BangLuongNhanVien> ds) {
        modelBangLuongNV.setRowCount(0);
        Locale vietNam = new Locale("vi", "VN");
        NumberFormat numberFormat = NumberFormat.getInstance(vietNam);
        numberFormat.setMaximumFractionDigits(0); //Format tiền vnd
        for (BangLuongNhanVien bangLuong : ds) {
            Object[] arr = {
                bangLuong.getMaBangLuong(),
                bangLuong.getNv().getHoTen(),
                bangLuong.getNgayTinhLuong().format(dateTimeFormatter),
                bangLuong.getSoNgayLam(),
                bangLuong.getSoNgayNghi(),
                numberFormat.format(bangLuong.getLuongChinh()) + " ₫",
                numberFormat.format(bangLuong.getLuongTangCa()) + " ₫",
                numberFormat.format(bangLuong.getTienUng()) + " ₫",
                numberFormat.format(bangLuong.getTienPhuCap()) + " ₫",
                numberFormat.format(bangLuong.getTienChuyenCan()) + " ₫",
                numberFormat.format(bangLuong.getBaoHiemXaHoi()) + " ₫",
                numberFormat.format(bangLuong.getThucLanh()) + " ₫"
            };
            modelBangLuongNV.addRow(arr);
        }
    }

    void resetTableBangLuongCNTheoDS(ArrayList<BangLuongCongNhan> ds) {
        modelBangLuongCN.setRowCount(0);
        Locale vietNam = new Locale("vi", "VN");
        NumberFormat numberFormat = NumberFormat.getInstance(vietNam);
        numberFormat.setMaximumFractionDigits(0); //Format tiền vnd
        for (BangLuongCongNhan bangLuong : ds) {
            Object[] arr = {
                bangLuong.getMaBangLuong(),
                bangLuong.getCongNhan().getHoTen(),
                bangLuong.getNgayTinhLuong().format(dateTimeFormatter),
                bangLuong.getSoNgayLam(),
                bangLuong.getSoNgayNghi(),
                numberFormat.format(bangLuong.getLuongSanPham()) + " ₫",
                numberFormat.format(bangLuong.getLuongTangCa()) + " ₫",
                numberFormat.format(bangLuong.getTienUng()) + " ₫",
                numberFormat.format(bangLuong.getTienPhuCap()) + " ₫",
                numberFormat.format(bangLuong.getTienChuyenCan()) + " ₫",
                numberFormat.format(bangLuong.getBaoHiemXaHoi()) + " ₫",
                numberFormat.format(bangLuong.getThucLanh()) + " ₫"
            };
            modelBangLuongCN.addRow(arr);
        }
    }

    void resetTableBangLuongCN() {
        modelBangLuongCN.setRowCount(0);
        bangLuongCongNhan_DAO = new BangLuongCongNhan_DAO();
        String thang = String.format("%02d", Integer.parseInt(jComboBoxThangCN.getSelectedItem().toString()));
        String nam = jComboBoxNamCN.getSelectedItem().toString().substring(2);
        ArrayList<BangLuongCongNhan> danhSachBangLuong = bangLuongCongNhan_DAO.getDSBangLuongCongNhanTheoThangNam(thang, nam);
        Locale vietNam = new Locale("vi", "VN");
        NumberFormat numberFormat = NumberFormat.getInstance(vietNam);
        numberFormat.setMaximumFractionDigits(0); //Format tiền vnd
        for (BangLuongCongNhan bangLuong : danhSachBangLuong) {
            Object[] arr = {
                bangLuong.getMaBangLuong(),
                bangLuong.getCongNhan().getHoTen(),
                bangLuong.getNgayTinhLuong().format(dateTimeFormatter),
                bangLuong.getSoNgayLam(),
                bangLuong.getSoNgayNghi(),
                numberFormat.format(bangLuong.getLuongSanPham()) + " ₫",
                numberFormat.format(bangLuong.getLuongTangCa()) + " ₫",
                numberFormat.format(bangLuong.getTienUng()) + " ₫",
                numberFormat.format(bangLuong.getTienPhuCap()) + " ₫",
                numberFormat.format(bangLuong.getTienChuyenCan()) + " ₫",
                numberFormat.format(bangLuong.getBaoHiemXaHoi()) + " ₫",
                numberFormat.format(bangLuong.getThucLanh()) + " ₫"
            };
            modelBangLuongCN.addRow(arr);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonInPDFCN;
    private javax.swing.JButton jButtonInPDFNV;
    private javax.swing.JButton jButtonTimKiemCN;
    private javax.swing.JButton jButtonTimKiemNV;
    private javax.swing.JComboBox<String> jComboBoxNamCN;
    private javax.swing.JComboBox<String> jComboBoxNamNV;
    private javax.swing.JComboBox<String> jComboBoxThangCN;
    private javax.swing.JComboBox<String> jComboBoxThangNV;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel1ThangNV;
    private javax.swing.JLabel jLabel1ThangNV1;
    private javax.swing.JLabel jLabelNamCN;
    private javax.swing.JLabel jLabelNamNV;
    private javax.swing.JLabel jLabelTimKiemCN;
    private javax.swing.JLabel jLabelTimKiemNV;
    private javax.swing.JPanel jPanelDSBangLuongCN;
    private javax.swing.JPanel jPanelDSBangLuongNV;
    private javax.swing.JPanel jPanelXemLuongCN;
    private javax.swing.JPanel jPanelXemLuongNVHC;
    private javax.swing.JPanel jPanelXuLyNV;
    private javax.swing.JPanel jPanelXuLyNV1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTable jTableBangLuongCN;
    private javax.swing.JTable jTableBangLuongNV;
    private javax.swing.JTextField jTextFieldTimKiemCN;
    private javax.swing.JTextField jTextFieldTimKiemNV;
    private javax.swing.JPanel pTittle;
    private javax.swing.JPanel pTongQuan;
    private javax.swing.JPanel pXemBangLuong;
    // End of variables declaration//GEN-END:variables
    private BangLuongNhanVien_DAO bangLuongNhanVien_DAO;
    private BangLuongCongNhan_DAO bangLuongCongNhan_DAO;
    private DefaultTableModel modelBangLuongNV;
    private DefaultTableModel modelBangLuongCN;
    private DateTimeFormatter dateTimeFormatter;
    private CongNhan_DAO congNhan_DAO;
    private BangChamCongCongNhan_DAO chamCongCongNhan_DAO;
    private ChiTietBangChamCong_DAO chiTietBangChamCong_DAO;
    private ArrayList<BangChamCongCongNhan> dsBCC;
    private ArrayList<ChiTietBangChamCong> dsCT;
}
