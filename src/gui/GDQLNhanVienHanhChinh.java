/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import dao.NhanVienHanhChinh_DAO;
import dao.PhongBan_DAO;
import entity.NhanVienHanhChinh;
import entity.PhongBan;
import java.awt.Image;
import java.io.File;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.sql.Date;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ngọc Quân
 */
public class GDQLNhanVienHanhChinh extends javax.swing.JPanel {

    private PhongBan_DAO phongBanDAO;
    private NhanVienHanhChinh_DAO nvhcDAO;
    private DefaultTableModel modelNhanVien;
    private DecimalFormat dfTien;
    private double luongCoBan;
    private double mucLuongCoSo = 1800000;
    private String hinhAnh = "";

    /**
     * Creates new form GDQLNhanVienHanhChinh
     */
    public GDQLNhanVienHanhChinh() {
        phongBanDAO = new PhongBan_DAO();
        nvhcDAO = new NhanVienHanhChinh_DAO();
        dfTien = new DecimalFormat();
        initComponents();

        String[] header_NhanVien = {"STT", "Mã nhân viên", "Họ tên", "Giới tính", "Ngày sinh", "Số điện thoại", "Địa chỉ", "Tình trạng", "Ngày vào làm", "Hệ số lương", "Lương cơ bản", "Chức vụ", "Email", "Tiền phụ cấp ngày", "Tiền chuyên cần", "Phòng ban", "Ghi chú"};
        modelNhanVien = new DefaultTableModel(header_NhanVien, 0);
        tableNhanVien.setModel(modelNhanVien);
        loadDSNhanVienLenUI();
        loadDSPhongBanLenUI();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPhai = new javax.swing.ButtonGroup();
        pQLNhanVienHanhChinh = new javax.swing.JPanel();
        pTittle = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        pTongQuan = new javax.swing.JPanel();
        pImage = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblHinhNV = new javax.swing.JLabel();
        btnChonAnh = new javax.swing.JButton();
        pThongTin = new javax.swing.JPanel();
        lblMaNV = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        lblHoTenNV = new javax.swing.JLabel();
        txtHoTenNV = new javax.swing.JTextField();
        lblPhai = new javax.swing.JLabel();
        radNam = new javax.swing.JRadioButton();
        radNu = new javax.swing.JRadioButton();
        lblNgaySinh = new javax.swing.JLabel();
        dateNgaySinh = new com.toedter.calendar.JDateChooser();
        lblNgayVaoLam = new javax.swing.JLabel();
        dateNgayVaoLam = new com.toedter.calendar.JDateChooser();
        lblSDT = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        lblPhongBan = new javax.swing.JLabel();
        cbxPhongBan = new javax.swing.JComboBox<>();
        lblChucVu = new javax.swing.JLabel();
        cbxChucVu = new javax.swing.JComboBox<>();
        lblHSLuong = new javax.swing.JLabel();
        cbxHSLuong = new javax.swing.JComboBox<>();
        lblLuongCB = new javax.swing.JLabel();
        lblDiaChi = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblTinhTrang = new javax.swing.JLabel();
        cbxTinhTrang = new javax.swing.JComboBox<>();
        txtLuongCB = new javax.swing.JTextField();
        lblTienPhuCapTheoNgay = new javax.swing.JLabel();
        txtTienPhuCapTheoNgay = new javax.swing.JTextField();
        lblTienChuyenCan = new javax.swing.JLabel();
        txtTienChuyenCan = new javax.swing.JTextField();
        lblGhiChu = new javax.swing.JLabel();
        txtGhiChu = new javax.swing.JTextField();
        jscrNhanVien = new javax.swing.JScrollPane();
        tableNhanVien = new javax.swing.JTable();
        pChucNang = new javax.swing.JPanel();
        btnCapNhat = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        btnNhapLai = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        pReload = new javax.swing.JPanel();
        btnReload = new javax.swing.JButton();
        pBoLoc = new javax.swing.JPanel();
        cbxLocTheoPB = new javax.swing.JComboBox<>();
        cbxLocTheoCV = new javax.swing.JComboBox<>();
        cbxLocTheoTT = new javax.swing.JComboBox<>();
        pTimKiem = new javax.swing.JPanel();
        txtTimTheoTTNV = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(958, 735));
        setPreferredSize(new java.awt.Dimension(958, 735));

        pQLNhanVienHanhChinh.setPreferredSize(new java.awt.Dimension(958, 735));

        pTittle.setBackground(new java.awt.Color(0, 0, 0));

        jLabel15.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(191, 95, 95));
        jLabel15.setText("QUẢN LÝ NHÂN VIÊN HÀNH CHÍNH");

        javax.swing.GroupLayout pTittleLayout = new javax.swing.GroupLayout(pTittle);
        pTittle.setLayout(pTittleLayout);
        pTittleLayout.setHorizontalGroup(
            pTittleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTittleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pTittleLayout.setVerticalGroup(
            pTittleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        pTongQuan.setBackground(new java.awt.Color(217, 217, 217));

        pImage.setBackground(new java.awt.Color(217, 217, 217));

        jPanel1.setBackground(new java.awt.Color(191, 95, 95));
        jPanel1.setPreferredSize(new java.awt.Dimension(153, 153));

        lblHinhNV.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHinhNV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/hinhnhanvien153px.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblHinhNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblHinhNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        btnChonAnh.setBackground(new java.awt.Color(191, 95, 95));
        btnChonAnh.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnChonAnh.setText("Chọn ảnh");
        btnChonAnh.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.black, java.awt.Color.black));
        btnChonAnh.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnChonAnh.setEnabled(false);
        btnChonAnh.setPreferredSize(new java.awt.Dimension(97, 25));
        btnChonAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonAnhActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pImageLayout = new javax.swing.GroupLayout(pImage);
        pImage.setLayout(pImageLayout);
        pImageLayout.setHorizontalGroup(
            pImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pImageLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnChonAnh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        pImageLayout.setVerticalGroup(
            pImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pImageLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnChonAnh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pThongTin.setBackground(new java.awt.Color(82, 79, 79));
        pThongTin.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Thông tin nhân viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18), new java.awt.Color(255, 255, 255))); // NOI18N
        pThongTin.setMaximumSize(new java.awt.Dimension(799, 242));
        pThongTin.setPreferredSize(new java.awt.Dimension(799, 242));
        pThongTin.setRequestFocusEnabled(false);

        lblMaNV.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblMaNV.setForeground(new java.awt.Color(255, 255, 255));
        lblMaNV.setText("Mã nhân viên:");
        lblMaNV.setPreferredSize(new java.awt.Dimension(100, 25));

        txtMaNV.setEditable(false);
        txtMaNV.setBackground(new java.awt.Color(204, 204, 204));
        txtMaNV.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtMaNV.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtMaNV.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtMaNV.setPreferredSize(new java.awt.Dimension(100, 25));

        lblHoTenNV.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblHoTenNV.setForeground(new java.awt.Color(255, 255, 255));
        lblHoTenNV.setText("Họ tên:");
        lblHoTenNV.setPreferredSize(new java.awt.Dimension(100, 25));

        txtHoTenNV.setEditable(false);
        txtHoTenNV.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtHoTenNV.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtHoTenNV.setPreferredSize(new java.awt.Dimension(170, 25));

        lblPhai.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblPhai.setForeground(new java.awt.Color(255, 255, 255));
        lblPhai.setText("Giới tính:");
        lblPhai.setPreferredSize(new java.awt.Dimension(100, 25));

        radNam.setBackground(new java.awt.Color(82, 79, 79));
        btnPhai.add(radNam);
        radNam.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        radNam.setForeground(new java.awt.Color(255, 255, 255));
        radNam.setSelected(true);
        radNam.setText("Nam");
        radNam.setEnabled(false);
        radNam.setPreferredSize(new java.awt.Dimension(55, 25));

        radNu.setBackground(new java.awt.Color(82, 79, 79));
        btnPhai.add(radNu);
        radNu.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        radNu.setForeground(new java.awt.Color(255, 255, 255));
        radNu.setText("Nữ");
        radNu.setEnabled(false);
        radNu.setPreferredSize(new java.awt.Dimension(55, 25));

        lblNgaySinh.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblNgaySinh.setForeground(new java.awt.Color(255, 255, 255));
        lblNgaySinh.setText("Ngày sinh:");
        lblNgaySinh.setPreferredSize(new java.awt.Dimension(100, 25));

        dateNgaySinh.setBackground(new java.awt.Color(255, 255, 255));
        dateNgaySinh.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        dateNgaySinh.setAlignmentY(1.0F);
        dateNgaySinh.setDateFormatString("yyyy-MM-dd");
        dateNgaySinh.setEnabled(false);
        dateNgaySinh.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        dateNgaySinh.setPreferredSize(new java.awt.Dimension(170, 25));

        lblNgayVaoLam.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblNgayVaoLam.setForeground(new java.awt.Color(255, 255, 255));
        lblNgayVaoLam.setText("Ngày vào làm:");
        lblNgayVaoLam.setPreferredSize(new java.awt.Dimension(100, 25));

        dateNgayVaoLam.setBackground(new java.awt.Color(255, 255, 255));
        dateNgayVaoLam.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        dateNgayVaoLam.setAlignmentY(1.0F);
        dateNgayVaoLam.setDateFormatString("yyyy-MM-dd");
        dateNgayVaoLam.setEnabled(false);
        dateNgayVaoLam.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        dateNgayVaoLam.setPreferredSize(new java.awt.Dimension(170, 25));

        lblSDT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblSDT.setForeground(new java.awt.Color(255, 255, 255));
        lblSDT.setText("Số điện thoại:");
        lblSDT.setPreferredSize(new java.awt.Dimension(100, 25));

        txtSDT.setEditable(false);
        txtSDT.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtSDT.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtSDT.setPreferredSize(new java.awt.Dimension(170, 25));

        lblEmail.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(255, 255, 255));
        lblEmail.setText("Email:");
        lblEmail.setPreferredSize(new java.awt.Dimension(60, 25));

        txtDiaChi.setEditable(false);
        txtDiaChi.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtDiaChi.setAlignmentY(1.0F);
        txtDiaChi.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtDiaChi.setPreferredSize(new java.awt.Dimension(170, 25));

        lblPhongBan.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblPhongBan.setForeground(new java.awt.Color(255, 255, 255));
        lblPhongBan.setText("Phòng ban:");
        lblPhongBan.setPreferredSize(new java.awt.Dimension(90, 25));

        cbxPhongBan.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cbxPhongBan.setEnabled(false);
        cbxPhongBan.setPreferredSize(new java.awt.Dimension(118, 25));
        cbxPhongBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxPhongBanActionPerformed(evt);
            }
        });

        lblChucVu.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblChucVu.setForeground(new java.awt.Color(255, 255, 255));
        lblChucVu.setText("Chức vụ:");
        lblChucVu.setPreferredSize(new java.awt.Dimension(90, 25));

        cbxChucVu.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        cbxChucVu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn chức vụ", "Quản đốc", "Trưởng phòng nhân sự", "Trưởng phòng kế toán", "Nhân viên" }));
        cbxChucVu.setEnabled(false);
        cbxChucVu.setPreferredSize(new java.awt.Dimension(118, 25));
        cbxChucVu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxChucVuActionPerformed(evt);
            }
        });

        lblHSLuong.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblHSLuong.setForeground(new java.awt.Color(255, 255, 255));
        lblHSLuong.setText("Hệ số lương:");
        lblHSLuong.setPreferredSize(new java.awt.Dimension(90, 25));

        cbxHSLuong.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbxHSLuong.setEnabled(false);
        cbxHSLuong.setPreferredSize(new java.awt.Dimension(118, 25));
        cbxHSLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxHSLuongActionPerformed(evt);
            }
        });

        lblLuongCB.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblLuongCB.setForeground(new java.awt.Color(255, 255, 255));
        lblLuongCB.setText("Lương cơ bản:");
        lblLuongCB.setPreferredSize(new java.awt.Dimension(105, 25));

        lblDiaChi.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblDiaChi.setForeground(new java.awt.Color(255, 255, 255));
        lblDiaChi.setText("Địa chỉ:");
        lblDiaChi.setPreferredSize(new java.awt.Dimension(100, 25));

        txtEmail.setEditable(false);
        txtEmail.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtEmail.setAlignmentY(1.0F);
        txtEmail.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtEmail.setPreferredSize(new java.awt.Dimension(170, 25));

        lblTinhTrang.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblTinhTrang.setForeground(new java.awt.Color(255, 255, 255));
        lblTinhTrang.setText("Tình trạng:");
        lblTinhTrang.setPreferredSize(new java.awt.Dimension(90, 25));

        cbxTinhTrang.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbxTinhTrang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đang làm việc", "Thôi Việc" }));
        cbxTinhTrang.setEnabled(false);
        cbxTinhTrang.setPreferredSize(new java.awt.Dimension(118, 25));

        txtLuongCB.setEditable(false);
        txtLuongCB.setBackground(new java.awt.Color(204, 204, 204));
        txtLuongCB.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtLuongCB.setAlignmentY(1.0F);
        txtLuongCB.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtLuongCB.setPreferredSize(new java.awt.Dimension(170, 25));

        lblTienPhuCapTheoNgay.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblTienPhuCapTheoNgay.setForeground(new java.awt.Color(255, 255, 255));
        lblTienPhuCapTheoNgay.setText("Tiền phụ cấp ngày:");
        lblTienPhuCapTheoNgay.setPreferredSize(new java.awt.Dimension(154, 25));

        txtTienPhuCapTheoNgay.setEditable(false);
        txtTienPhuCapTheoNgay.setBackground(new java.awt.Color(204, 204, 204));
        txtTienPhuCapTheoNgay.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTienPhuCapTheoNgay.setAlignmentY(1.0F);
        txtTienPhuCapTheoNgay.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtTienPhuCapTheoNgay.setPreferredSize(new java.awt.Dimension(170, 25));

        lblTienChuyenCan.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblTienChuyenCan.setForeground(new java.awt.Color(255, 255, 255));
        lblTienChuyenCan.setText("Tiền chuyên cần:");
        lblTienChuyenCan.setPreferredSize(new java.awt.Dimension(154, 25));

        txtTienChuyenCan.setEditable(false);
        txtTienChuyenCan.setBackground(new java.awt.Color(204, 204, 204));
        txtTienChuyenCan.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTienChuyenCan.setAlignmentY(1.0F);
        txtTienChuyenCan.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtTienChuyenCan.setPreferredSize(new java.awt.Dimension(170, 25));

        lblGhiChu.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblGhiChu.setForeground(new java.awt.Color(255, 255, 255));
        lblGhiChu.setText("Ghi chú:");
        lblGhiChu.setPreferredSize(new java.awt.Dimension(105, 25));

        txtGhiChu.setEditable(false);
        txtGhiChu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtGhiChu.setAlignmentY(1.0F);
        txtGhiChu.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtGhiChu.setPreferredSize(new java.awt.Dimension(170, 25));

        javax.swing.GroupLayout pThongTinLayout = new javax.swing.GroupLayout(pThongTin);
        pThongTin.setLayout(pThongTinLayout);
        pThongTinLayout.setHorizontalGroup(
            pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pThongTinLayout.createSequentialGroup()
                .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lblHoTenNV, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblMaNV, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblPhai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSDT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNgayVaoLam, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDiaChi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pThongTinLayout.createSequentialGroup()
                        .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(dateNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtHoTenNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pThongTinLayout.createSequentialGroup()
                                .addComponent(radNam, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radNu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dateNgayVaoLam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pThongTinLayout.createSequentialGroup()
                                .addComponent(lblTienChuyenCan, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTienChuyenCan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtGhiChu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(pThongTinLayout.createSequentialGroup()
                                .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblGhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pThongTinLayout.createSequentialGroup()
                                            .addComponent(lblHSLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(cbxHSLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblLuongCB, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtLuongCB, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(pThongTinLayout.createSequentialGroup()
                                            .addComponent(lblTienPhuCapTheoNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtTienPhuCapTheoNgay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(pThongTinLayout.createSequentialGroup()
                                            .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(pThongTinLayout.createSequentialGroup()
                                                    .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pThongTinLayout.createSequentialGroup()
                                                    .addComponent(lblPhongBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(cbxPhongBan, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(lblChucVu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblTinhTrang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(cbxTinhTrang, 0, 150, Short.MAX_VALUE)
                                                .addComponent(cbxChucVu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        pThongTinLayout.setVerticalGroup(
            pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pThongTinLayout.createSequentialGroup()
                .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pThongTinLayout.createSequentialGroup()
                        .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxTinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHoTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHoTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPhongBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxPhongBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPhai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radNu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHSLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxHSLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLuongCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLuongCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dateNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTienPhuCapTheoNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTienPhuCapTheoNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateNgayVaoLam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNgayVaoLam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTienChuyenCan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTienChuyenCan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jscrNhanVien.setBackground(new java.awt.Color(217, 217, 217));
        jscrNhanVien.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Danh sách nhân viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N
        jscrNhanVien.setAutoscrolls(true);

        tableNhanVien.setAutoCreateRowSorter(true);
        tableNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã nhân viên", "Họ tên", "Giới tính", "Ngày sinh", "Số điện thoại", "Địa chỉ", "Tình trạng", "Ngày vào làm", "Hệ số lương", "Lương cơ bản", "Chức vụ", "Email", "Tiền phụ cấp ngày", "Tiền chuyên cần", "Phòng ban", "Ghi chú"
            }
        ));
        tableNhanVien.setToolTipText("");
        tableNhanVien.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tableNhanVien.setRowHeight(35);
        tableNhanVien.setShowGrid(true);
        tableNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableNhanVienMouseClicked(evt);
            }
        });
        tableNhanVien.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableNhanVienKeyReleased(evt);
            }
        });
        jscrNhanVien.setViewportView(tableNhanVien);
        if (tableNhanVien.getColumnModel().getColumnCount() > 0) {
            tableNhanVien.getColumnModel().getColumn(0).setPreferredWidth(30);
            tableNhanVien.getColumnModel().getColumn(1).setPreferredWidth(100);
            tableNhanVien.getColumnModel().getColumn(2).setPreferredWidth(200);
            tableNhanVien.getColumnModel().getColumn(3).setPreferredWidth(75);
            tableNhanVien.getColumnModel().getColumn(4).setPreferredWidth(100);
            tableNhanVien.getColumnModel().getColumn(5).setPreferredWidth(100);
            tableNhanVien.getColumnModel().getColumn(6).setPreferredWidth(200);
            tableNhanVien.getColumnModel().getColumn(7).setPreferredWidth(100);
            tableNhanVien.getColumnModel().getColumn(8).setPreferredWidth(150);
            tableNhanVien.getColumnModel().getColumn(9).setPreferredWidth(100);
            tableNhanVien.getColumnModel().getColumn(10).setPreferredWidth(125);
            tableNhanVien.getColumnModel().getColumn(11).setPreferredWidth(150);
            tableNhanVien.getColumnModel().getColumn(12).setPreferredWidth(125);
            tableNhanVien.getColumnModel().getColumn(13).setPreferredWidth(150);
            tableNhanVien.getColumnModel().getColumn(14).setPreferredWidth(150);
            tableNhanVien.getColumnModel().getColumn(15).setPreferredWidth(150);
            tableNhanVien.getColumnModel().getColumn(16).setPreferredWidth(100);
        }

        pChucNang.setBackground(new java.awt.Color(217, 217, 217));
        pChucNang.setPreferredSize(new java.awt.Dimension(958, 50));

        btnCapNhat.setBackground(new java.awt.Color(191, 95, 95));
        btnCapNhat.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnCapNhat.setMnemonic('C');
        btnCapNhat.setText("Cập nhật");
        btnCapNhat.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.black, java.awt.Color.black));
        btnCapNhat.setPreferredSize(new java.awt.Dimension(100, 40));
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnLuu.setBackground(new java.awt.Color(191, 95, 95));
        btnLuu.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnLuu.setMnemonic('L');
        btnLuu.setText("Lưu");
        btnLuu.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.black, java.awt.Color.black));
        btnLuu.setEnabled(false);
        btnLuu.setPreferredSize(new java.awt.Dimension(100, 40));
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnNhapLai.setBackground(new java.awt.Color(191, 95, 95));
        btnNhapLai.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnNhapLai.setMnemonic('F');
        btnNhapLai.setText("Nhập lại");
        btnNhapLai.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.black, java.awt.Color.black));
        btnNhapLai.setPreferredSize(new java.awt.Dimension(100, 40));
        btnNhapLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapLaiActionPerformed(evt);
            }
        });

        btnThem.setBackground(new java.awt.Color(191, 95, 95));
        btnThem.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnThem.setMnemonic('T');
        btnThem.setText("Thêm");
        btnThem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.black, java.awt.Color.black));
        btnThem.setPreferredSize(new java.awt.Dimension(100, 40));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pChucNangLayout = new javax.swing.GroupLayout(pChucNang);
        pChucNang.setLayout(pChucNangLayout);
        pChucNangLayout.setHorizontalGroup(
            pChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChucNangLayout.createSequentialGroup()
                .addGap(233, 233, 233)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnNhapLai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pChucNangLayout.setVerticalGroup(
            pChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChucNangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNhapLai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pReload.setBackground(new java.awt.Color(217, 217, 217));

        btnReload.setBackground(new java.awt.Color(191, 95, 95));
        btnReload.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnReload.setMnemonic('R');
        btnReload.setText("Tải lại");
        btnReload.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.black, java.awt.Color.black));
        btnReload.setPreferredSize(new java.awt.Dimension(100, 40));
        btnReload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pReloadLayout = new javax.swing.GroupLayout(pReload);
        pReload.setLayout(pReloadLayout);
        pReloadLayout.setHorizontalGroup(
            pReloadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pReloadLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnReload, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pReloadLayout.setVerticalGroup(
            pReloadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pReloadLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btnReload, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pBoLoc.setBackground(new java.awt.Color(217, 217, 217));
        pBoLoc.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Lọc theo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        pBoLoc.setPreferredSize(new java.awt.Dimension(400, 81));

        cbxLocTheoPB.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbxLocTheoPB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn phòng ban", "Phòng kế toán", "Phòng nhân sự", "Phòng điều hành phân xưởng" }));
        cbxLocTheoPB.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Phòng ban", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N
        cbxLocTheoPB.setPreferredSize(new java.awt.Dimension(200, 45));
        cbxLocTheoPB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxLocTheoPBActionPerformed(evt);
            }
        });

        cbxLocTheoCV.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbxLocTheoCV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn chức vụ", "Quản đốc", "Trưởng phòng nhân sự", "Trưởng phòng kế toán", "Nhân viên" }));
        cbxLocTheoCV.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chức vụ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N
        cbxLocTheoCV.setPreferredSize(new java.awt.Dimension(118, 45));
        cbxLocTheoCV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxLocTheoCVActionPerformed(evt);
            }
        });

        cbxLocTheoTT.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbxLocTheoTT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đang làm việc", "Thôi Việc" }));
        cbxLocTheoTT.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tình trạng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N
        cbxLocTheoTT.setPreferredSize(new java.awt.Dimension(118, 45));
        cbxLocTheoTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxLocTheoTTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pBoLocLayout = new javax.swing.GroupLayout(pBoLoc);
        pBoLoc.setLayout(pBoLocLayout);
        pBoLocLayout.setHorizontalGroup(
            pBoLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pBoLocLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbxLocTheoPB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxLocTheoCV, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxLocTheoTT, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pBoLocLayout.setVerticalGroup(
            pBoLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pBoLocLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pBoLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbxLocTheoTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxLocTheoCV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxLocTheoPB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pTimKiem.setBackground(new java.awt.Color(217, 217, 217));
        pTimKiem.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Tìm theo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N

        txtTimTheoTTNV.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTimTheoTTNV.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mã, số ĐT, tên nhân viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N
        txtTimTheoTTNV.setPreferredSize(new java.awt.Dimension(64, 45));
        txtTimTheoTTNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimTheoTTNVActionPerformed(evt);
            }
        });

        btnTimKiem.setBackground(new java.awt.Color(191, 95, 95));
        btnTimKiem.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/search_35px.png"))); // NOI18N
        btnTimKiem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.black, java.awt.Color.black));
        btnTimKiem.setPreferredSize(new java.awt.Dimension(100, 35));
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pTimKiemLayout = new javax.swing.GroupLayout(pTimKiem);
        pTimKiem.setLayout(pTimKiemLayout);
        pTimKiemLayout.setHorizontalGroup(
            pTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTimKiemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimTheoTTNV, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pTimKiemLayout.setVerticalGroup(
            pTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTimKiemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTimTheoTTNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pTongQuanLayout = new javax.swing.GroupLayout(pTongQuan);
        pTongQuan.setLayout(pTongQuanLayout);
        pTongQuanLayout.setHorizontalGroup(
            pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTongQuanLayout.createSequentialGroup()
                .addGroup(pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jscrNhanVien)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pTongQuanLayout.createSequentialGroup()
                        .addComponent(pImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pTongQuanLayout.createSequentialGroup()
                        .addComponent(pReload, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pBoLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(pChucNang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pTongQuanLayout.setVerticalGroup(
            pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTongQuanLayout.createSequentialGroup()
                .addGroup(pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(pTimKiem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pBoLoc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pReload, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jscrNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pQLNhanVienHanhChinhLayout = new javax.swing.GroupLayout(pQLNhanVienHanhChinh);
        pQLNhanVienHanhChinh.setLayout(pQLNhanVienHanhChinhLayout);
        pQLNhanVienHanhChinhLayout.setHorizontalGroup(
            pQLNhanVienHanhChinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pTittle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pTongQuan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pQLNhanVienHanhChinhLayout.setVerticalGroup(
            pQLNhanVienHanhChinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pQLNhanVienHanhChinhLayout.createSequentialGroup()
                .addComponent(pTittle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pTongQuan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 958, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pQLNhanVienHanhChinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 735, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pQLNhanVienHanhChinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // xử lý chức năng chọn ảnh cho nhân viên hành chính
    private void btnChonAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonAnhActionPerformed
        JFileChooser fileChooser = new JFileChooser("src//image");
        FileNameExtensionFilter imageFilter = new FileNameExtensionFilter("image", "jpg", "png"); // định dạng hình ảnh được chọn
        fileChooser.setFileFilter(imageFilter);
        fileChooser.setMultiSelectionEnabled(false); // 1 thời điểm người dùng chỉ được chọn 1 hình ảnh.

        fileChooser.setDialogTitle("Chọn hình ảnh");
        int x = fileChooser.showDialog(this, "Chọn");
        if (x == JFileChooser.APPROVE_OPTION) {
            File ftenAnh = fileChooser.getSelectedFile();
            String duongdanAnh = ftenAnh.getAbsolutePath();
            hinhAnh = duongdanAnh.substring(76).replace('\\', '/');
            lblHinhNV.setIcon(resizeImage(duongdanAnh));
            System.out.println(hinhAnh);

        }
    }//GEN-LAST:event_btnChonAnhActionPerformed

    // resize hình theo kích thước label
    private ImageIcon resizeImage(String imagePath) {
        ImageIcon myImage = new ImageIcon(imagePath);
        Image img = myImage.getImage();
        Image newImg = img.getScaledInstance(lblHinhNV.getWidth(), lblHinhNV.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        Object o = evt.getSource();
        if (o.equals(btnThem)) {
            if (btnThem.getText().equals("Thêm")) {
                nhapLai();
                txtMaNV.setText(nvhcDAO.getMaNV());
                txtHoTenNV.setEditable(true);
                radNam.setEnabled(true);
                radNu.setEnabled(true);
                txtSDT.setEditable(true);
                txtDiaChi.setEditable(true);
                txtEmail.setEditable(true);
                cbxPhongBan.setEnabled(true);
                cbxChucVu.setEnabled(true);
                cbxHSLuong.setEnabled(true);
                txtGhiChu.setEditable(true);

                txtHoTenNV.requestFocus();
                btnThem.setText("Hủy");
                btnLuu.setEnabled(true);
                btnCapNhat.setEnabled(false);
                btnChonAnh.setEnabled(true);
            } else {
                khoaTextField();
            }

        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnNhapLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapLaiActionPerformed
        Object o = evt.getSource();
        if (o.equals(btnNhapLai)) {
            nhapLai();
        }
    }//GEN-LAST:event_btnNhapLaiActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        Object o = evt.getSource();
        if (o.equals(btnCapNhat)) {
            if (btnCapNhat.getText().equals("Cập nhật")) {
                int row = tableNhanVien.getSelectedRow();
                if (row >= 0) {
                    txtHoTenNV.setEditable(true);
                    radNam.setEnabled(true);
                    radNu.setEnabled(true);
                    txtSDT.setEditable(true);
                    txtDiaChi.setEditable(true);
                    txtEmail.setEditable(true);
                    cbxTinhTrang.setEnabled(true);
                    cbxPhongBan.setEnabled(true);
                    cbxChucVu.setEnabled(true);
                    cbxHSLuong.setEnabled(true);
                    txtGhiChu.setEditable(true);
                    txtTienChuyenCan.setEditable(true);

                    txtHoTenNV.requestFocus();
                    btnCapNhat.setText("Hủy");
                    btnLuu.setEnabled(true);
                    btnThem.setEnabled(false);
                    btnChonAnh.setEnabled(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Vui lòng chọn nhân viên cần cập nhật thông tin!", "Thông báo", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                khoaTextField();
            }

        }
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        Object o = evt.getSource();
        if (o.equals(btnLuu)) {
            try {
                String hoTen = txtHoTenNV.getText();
                boolean gioiTinh = radNam.isSelected();
                String soDT = txtSDT.getText();
                String diaChi = txtDiaChi.getText();
                String tinhTrang = cbxTinhTrang.getSelectedItem().toString();
                boolean tTrang = Boolean.parseBoolean(tinhTrang);
                if (tinhTrang.equalsIgnoreCase("Đang làm việc")) {
                    tTrang = true;
                }
                double heSoLuong = Double.parseDouble(cbxHSLuong.getSelectedItem().toString());
                String chucVu = cbxChucVu.getSelectedItem().toString();
                String email = txtEmail.getText();
                double tienPhuCapTheoNgay = Double.parseDouble(txtTienPhuCapTheoNgay.getText().replace(".", ""));
                double tienChuyenCan = Double.parseDouble(txtTienChuyenCan.getText().replace(".", ""));
                String ghiChu = txtGhiChu.getText();
                PhongBan phongBan = new PhongBan(phongBanDAO.getMaPBTheoTenPB(cbxPhongBan.getSelectedItem().toString()));
                Date ngaySinh = new Date(dateNgaySinh.getDate().getYear(), dateNgaySinh.getDate().getMonth(), dateNgaySinh.getDate().getDate());
                Date ngayVaoLam = new Date(dateNgayVaoLam.getDate().getYear(), dateNgayVaoLam.getDate().getMonth(), dateNgayVaoLam.getDate().getDate());
                Date nowNgaySinh = new Date(System.currentTimeMillis()); // ngày hiện tại để so sánh với ngày sinh
                Date nowNgayVaoLam = new Date(System.currentTimeMillis()); // ngày hiện tại để so sánh với ngày vào làm
                nowNgaySinh.setYear(nowNgaySinh.getYear() - 18);
                if (btnThem.getText().equals("Hủy")) {
                    String maNV = nvhcDAO.getMaNV();
                    if (nvhcDAO.validDataNhanVien(txtHoTenNV, txtSDT, txtDiaChi, txtEmail, cbxPhongBan, cbxChucVu)) {
                        if (nowNgaySinh.getTime() >= ngaySinh.getTime()) {
                            if (ngayVaoLam.getTime() <= nowNgayVaoLam.getTime()) { // ngày vào làm phải nhỏ hơn hoặc bằng ngày hiện tại.
                                if (nvhcDAO.checkSdtNV(soDT) == false) { // không trùng số điện thoại
                                    NhanVienHanhChinh nvhc = new NhanVienHanhChinh(maNV, hoTen, gioiTinh, ngaySinh, soDT, diaChi, tTrang,
                                            ngayVaoLam, hinhAnh, heSoLuong, luongCoBan, chucVu, email, tienPhuCapTheoNgay, tienChuyenCan, ghiChu, phongBan);
                                    nvhcDAO.createNhanVien(nvhc);
                                    loadDSNhanVienLenUI();
                                    JOptionPane.showMessageDialog(this, "Thêm nhân viên thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                                    khoaTextField();
                                } else {
                                    JOptionPane.showMessageDialog(this, "Số điện thoại đã tồn tại \nVui lòng nhập lại", "Thông báo", JOptionPane.ERROR_MESSAGE);
                                    txtSDT.requestFocus();
                                    txtSDT.selectAll();
                                }
                            } else {
                                JOptionPane.showMessageDialog(this, "Ngày vào làm không hợp lệ\nNgày vào làm phải nhỏ hơn hoặc bằng ngày hiện tại.", "Thông báo", JOptionPane.ERROR_MESSAGE);
                                dateNgayVaoLam.requestFocus();
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Ngày sinh không hợp lệ\nNhân viên phải từ đủ 18 tuổi.", "Thông báo", JOptionPane.ERROR_MESSAGE);
                            dateNgaySinh.requestFocus();
                        }
                    }
                } else if (btnCapNhat.getText().equals("Hủy")) {
                    int thongBao = JOptionPane.showConfirmDialog(this, "Vui lòng nhấn Xác nhận để cập nhật thông tin nhân viên này.",
                            "Thông báo xác nhận", JOptionPane.YES_NO_OPTION);
                    if (thongBao == JOptionPane.YES_OPTION) {
                        String maNV = txtMaNV.getText();
                        if (nvhcDAO.validDataNhanVien(txtHoTenNV, txtSDT, txtDiaChi, txtEmail, cbxPhongBan, cbxChucVu)) {
                            if (nowNgaySinh.getTime() >= ngaySinh.getTime()) {
                                if (ngayVaoLam.getTime() <= nowNgayVaoLam.getTime()) {
                                    NhanVienHanhChinh nvhc = new NhanVienHanhChinh(maNV, hoTen, gioiTinh, ngaySinh, soDT, diaChi, tTrang,
                                            ngayVaoLam, hinhAnh, heSoLuong, luongCoBan, chucVu, email, tienPhuCapTheoNgay, tienChuyenCan, ghiChu, phongBan);
                                    nvhcDAO.updateNhanVien(nvhc);
                                    loadDSNhanVienLenUI();
                                    JOptionPane.showMessageDialog(this, "Cập nhật thông tin nhân viên thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                                    khoaTextField();
                                } else {
                                    JOptionPane.showMessageDialog(this, "Ngày vào làm không hợp lệ\nNgày vào làm phải nhỏ hơn hoặc bằng ngày hiện tại.", "Thông báo", JOptionPane.ERROR_MESSAGE);
                                    dateNgayVaoLam.requestFocus();
                                }
                            } else {
                                JOptionPane.showMessageDialog(this, "Ngày sinh không hợp lệ\nNhân viên phải từ đủ 18 tuổi.", "Thông báo", JOptionPane.ERROR_MESSAGE);
                                dateNgaySinh.requestFocus();
                            }
                        }
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin nhân viên", "Thông báo", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void cbxChucVuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxChucVuActionPerformed
        Object o = evt.getSource();
        if (o.equals(cbxChucVu)) {
            try {
                String chucVu = cbxChucVu.getSelectedItem().toString();
                switch (chucVu) {
                    case "Quản đốc":
                        cbxHSLuong.removeAllItems();
                        cbxHSLuong.addItem("4.0");
                        cbxHSLuong.addItem("4.1");
                        cbxHSLuong.addItem("4.2");
                        cbxHSLuong.addItem("4.3");
                        cbxHSLuong.addItem("4.4");
                        cbxHSLuong.addItem("4.5");
                        txtTienPhuCapTheoNgay.setText(dfTien.format(300000));
                        txtTienChuyenCan.setText(dfTien.format(1000000));
                        break;
                    case "Trưởng phòng nhân sự":
                        cbxHSLuong.removeAllItems();
                        cbxHSLuong.addItem("3.0");
                        cbxHSLuong.addItem("3.1");
                        cbxHSLuong.addItem("3.2");
                        cbxHSLuong.addItem("3.3");
                        cbxHSLuong.addItem("3.4");
                        txtTienPhuCapTheoNgay.setText(dfTien.format(200000));
                        txtTienChuyenCan.setText(dfTien.format(700000));
                        break;
                    case "Trưởng phòng kế toán":
                        cbxHSLuong.removeAllItems();
                        cbxHSLuong.addItem("3.5");
                        cbxHSLuong.addItem("3.6");
                        cbxHSLuong.addItem("3.7");
                        cbxHSLuong.addItem("3.8");
                        cbxHSLuong.addItem("3.9");
                        txtTienPhuCapTheoNgay.setText(dfTien.format(200000));
                        txtTienChuyenCan.setText(dfTien.format(700000));
                        break;
                    case "Nhân viên":
                        cbxHSLuong.removeAllItems();
                        cbxHSLuong.addItem("2.2");
                        cbxHSLuong.addItem("2.3");
                        cbxHSLuong.addItem("2.4");
                        cbxHSLuong.addItem("2.5");
                        cbxHSLuong.addItem("2.6");
                        cbxHSLuong.addItem("2.7");
                        cbxHSLuong.addItem("2.8");
                        txtTienPhuCapTheoNgay.setText(dfTien.format(80000));
                        txtTienChuyenCan.setText(dfTien.format(500000));
                        break;
                    default:
                        cbxHSLuong.removeAllItems();
                        cbxHSLuong.addItem("");
                        txtTienPhuCapTheoNgay.setText("");
                        txtTienChuyenCan.setText("");
                        break;
                }
            } catch (Exception e) {
            }

        }
    }//GEN-LAST:event_cbxChucVuActionPerformed

    private void cbxHSLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxHSLuongActionPerformed
        Object o = evt.getSource();
        if (o.equals(cbxHSLuong)) {
            try {
                double heSoLuong = Double.parseDouble(cbxHSLuong.getSelectedItem().toString());
                luongCoBan = heSoLuong * mucLuongCoSo;
                txtLuongCB.setText(dfTien.format(luongCoBan));
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_cbxHSLuongActionPerformed

    private void btnReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadActionPerformed
        Object o = evt.getSource();
        if (o.equals(btnReload)) {
            txtTimTheoTTNV.setText("");
            cbxLocTheoTT.setSelectedItem("Đang làm việc");
            cbxLocTheoPB.setSelectedItem("Chọn phòng ban");
            cbxLocTheoCV.setSelectedItem("Chọn chức vụ");
            loadDSNhanVienLenUI();
        }
    }//GEN-LAST:event_btnReloadActionPerformed

    private void cbxLocTheoPBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxLocTheoPBActionPerformed
        loadDSNhanVienTheoPhongBan();
    }//GEN-LAST:event_cbxLocTheoPBActionPerformed

    private void cbxLocTheoCVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxLocTheoCVActionPerformed
        loadDSNhanVienTheoChucVu();
    }//GEN-LAST:event_cbxLocTheoCVActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        Object o = evt.getSource();
        if (o.equals(btnTimKiem)) {
            String input = txtTimTheoTTNV.getText().trim();
            String regexMaNV = "([0-9]{2}(1)[0-9]{3})|";
            String regexTenNV = "([ A-Za-za-zA-ZÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂẾưăạảấầẩẫậắằẳẵặẹẻẽềềểếỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]+)|";
            String regexSDT = "((03|08|09|07|05)[0-9]{8})";
            if (!txtTimTheoTTNV.getText().equals("")) {
                if (nvhcDAO.regexTimNV(txtTimTheoTTNV)) {
                    if (input.matches(regexMaNV) || input.matches(regexSDT)) {
                        loadDSNhanVienTheoMaHoacSDT();
                    }
                    if (input.matches(regexTenNV)) {
                        loadDSNhanVienTheoTen();
                    }
                    if (tableNhanVien.getRowCount() == 0) {
                        JOptionPane.showMessageDialog(this, "Không tìm thấy thông tin nhân viên phù hợp!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            } else {
                clearTable();
                JOptionPane.showMessageDialog(this, "Vui lòng nhập thông tin cần tìm kiếm", "Thông báo", JOptionPane.WARNING_MESSAGE);
                txtTimTheoTTNV.requestFocus();
            }
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void cbxLocTheoTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxLocTheoTTActionPerformed
        loadDSNhanVienTheoTinhTrang();
    }//GEN-LAST:event_cbxLocTheoTTActionPerformed

    private void tableNhanVienKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableNhanVienKeyReleased
        fillDuLieuVaoTextField();
    }//GEN-LAST:event_tableNhanVienKeyReleased

    private void tableNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableNhanVienMouseClicked
        fillDuLieuVaoTextField();
    }//GEN-LAST:event_tableNhanVienMouseClicked

    private void txtTimTheoTTNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimTheoTTNVActionPerformed
        btnTimKiem.doClick();
    }//GEN-LAST:event_txtTimTheoTTNVActionPerformed

    private void cbxPhongBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxPhongBanActionPerformed
//        String phongBan = cbxPhongBan.getSelectedItem().toString();
//        if (phongBan.equalsIgnoreCase("phòng nhân sự")) {
//            cbxChucVu.removeAllItems();
//            cbxChucVu.addItem("Chọn chức vụ");
//            cbxChucVu.addItem("Trưởng phòng nhân sự");
//            cbxChucVu.addItem("Nhân viên");
//        } else if (phongBan.equalsIgnoreCase("phòng kế toán")) {
//            cbxChucVu.removeAllItems();
//            cbxChucVu.addItem("Chọn chức vụ");
//            cbxChucVu.addItem("Trưởng phòng kế toán");
//            cbxChucVu.addItem("Nhân viên");
//        } else if (phongBan.equalsIgnoreCase("phòng điều hành phân xưởng")) {
//            cbxChucVu.removeAllItems();
//            cbxChucVu.addItem("Chọn chức vụ");
//            cbxChucVu.addItem("Quản đốc");
//            cbxChucVu.addItem("Nhân viên");
//        } 
//        else {
//            cbxChucVu.removeAllItems();
//            cbxChucVu.addItem("Chọn chức vụ");
//        }
    }//GEN-LAST:event_cbxPhongBanActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnChonAnh;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnNhapLai;
    private javax.swing.ButtonGroup btnPhai;
    private javax.swing.JButton btnReload;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JComboBox<String> cbxChucVu;
    private javax.swing.JComboBox<String> cbxHSLuong;
    private javax.swing.JComboBox<String> cbxLocTheoCV;
    private javax.swing.JComboBox<String> cbxLocTheoPB;
    private javax.swing.JComboBox<String> cbxLocTheoTT;
    private javax.swing.JComboBox<String> cbxPhongBan;
    private javax.swing.JComboBox<String> cbxTinhTrang;
    private com.toedter.calendar.JDateChooser dateNgaySinh;
    private com.toedter.calendar.JDateChooser dateNgayVaoLam;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jscrNhanVien;
    private javax.swing.JLabel lblChucVu;
    private javax.swing.JLabel lblDiaChi;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblGhiChu;
    private javax.swing.JLabel lblHSLuong;
    private javax.swing.JLabel lblHinhNV;
    private javax.swing.JLabel lblHoTenNV;
    private javax.swing.JLabel lblLuongCB;
    private javax.swing.JLabel lblMaNV;
    private javax.swing.JLabel lblNgaySinh;
    private javax.swing.JLabel lblNgayVaoLam;
    private javax.swing.JLabel lblPhai;
    private javax.swing.JLabel lblPhongBan;
    private javax.swing.JLabel lblSDT;
    private javax.swing.JLabel lblTienChuyenCan;
    private javax.swing.JLabel lblTienPhuCapTheoNgay;
    private javax.swing.JLabel lblTinhTrang;
    private javax.swing.JPanel pBoLoc;
    private javax.swing.JPanel pChucNang;
    private javax.swing.JPanel pImage;
    private javax.swing.JPanel pQLNhanVienHanhChinh;
    private javax.swing.JPanel pReload;
    private javax.swing.JPanel pThongTin;
    private javax.swing.JPanel pTimKiem;
    private javax.swing.JPanel pTittle;
    private javax.swing.JPanel pTongQuan;
    private javax.swing.JRadioButton radNam;
    private javax.swing.JRadioButton radNu;
    private javax.swing.JTable tableNhanVien;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtGhiChu;
    private javax.swing.JTextField txtHoTenNV;
    private javax.swing.JTextField txtLuongCB;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTienChuyenCan;
    private javax.swing.JTextField txtTienPhuCapTheoNgay;
    private javax.swing.JTextField txtTimTheoTTNV;
    // End of variables declaration//GEN-END:variables

//    đổ dữ liệu vào textfield khi chọn trong table
    private void fillDuLieuVaoTextField() {
            int row = tableNhanVien.getSelectedRow();
            txtMaNV.setText(modelNhanVien.getValueAt(row, 1).toString());
            txtHoTenNV.setText(modelNhanVien.getValueAt(row, 2).toString());
            String gioiTinh = modelNhanVien.getValueAt(row, 3).toString();
            if (gioiTinh.equals("Nam")) {
                radNam.setSelected(true);
            } else {
                radNu.setSelected(true);
            }
            dateNgaySinh.setDate((Date) modelNhanVien.getValueAt(row, 4));
            txtSDT.setText(modelNhanVien.getValueAt(row, 5).toString());
            txtDiaChi.setText(modelNhanVien.getValueAt(row, 6).toString());
            cbxTinhTrang.setSelectedItem(modelNhanVien.getValueAt(row, 7).toString());
            dateNgayVaoLam.setDate((Date) modelNhanVien.getValueAt(row, 8));
            cbxHSLuong.setSelectedItem(modelNhanVien.getValueAt(row, 9).toString());
            txtLuongCB.setText(modelNhanVien.getValueAt(row, 10).toString());
            cbxChucVu.setSelectedItem(modelNhanVien.getValueAt(row, 11).toString());
            txtEmail.setText(modelNhanVien.getValueAt(row, 12).toString());
            txtTienPhuCapTheoNgay.setText(modelNhanVien.getValueAt(row, 13).toString());
            txtTienChuyenCan.setText(modelNhanVien.getValueAt(row, 14).toString());
            cbxPhongBan.setSelectedItem(modelNhanVien.getValueAt(row, 15).toString());
            txtGhiChu.setText(modelNhanVien.getValueAt(row, 16).toString());
            for (NhanVienHanhChinh nvhc : nvhcDAO.getNhanVienByMaNV(modelNhanVien.getValueAt(row, 1).toString())) {
                lblHinhNV.setIcon(new ImageIcon(getClass().getResource(nvhc.getHinhAnh())));
            }
    }

//    khóa textField sau khi thêm hoặc cập nhật thông tin
    private void khoaTextField() {
        nhapLai();
        txtHoTenNV.setEditable(false);
        radNam.setEnabled(false);
        radNu.setEnabled(false);
        txtSDT.setEditable(false);
        txtDiaChi.setEditable(false);
        txtEmail.setEditable(false);
        cbxPhongBan.setEnabled(false);
        cbxChucVu.setEnabled(false);
        cbxHSLuong.setEnabled(false);
        txtGhiChu.setEditable(false);
        btnLuu.setEnabled(false);
        btnChonAnh.setEnabled(false);

        if (btnThem.getText().equals("Hủy")) {
            btnThem.setText("Thêm");
            btnCapNhat.setEnabled(true);
        } else if (btnCapNhat.getText().equals("Hủy")) {
            btnCapNhat.setText("Cập nhật");
            btnThem.setEnabled(true);
        }
    }

//    làm mới các trường thông tin nhân viên
    private void nhapLai() {
        txtMaNV.setText("");
        txtHoTenNV.setText("");
        txtSDT.setText("");
        txtDiaChi.setText("");
        txtEmail.setText("");
        txtLuongCB.setText("");
        txtTienPhuCapTheoNgay.setText("");
        txtTienChuyenCan.setText("");
        txtGhiChu.setText("");
        radNam.setSelected(true);
        cbxPhongBan.setSelectedItem("Chọn phòng ban");
        cbxChucVu.setSelectedItem("Chọn chức vụ");
        cbxTinhTrang.setSelectedItem("Đang làm việc");
        cbxHSLuong.setSelectedItem("");

        txtHoTenNV.requestFocus();
    }

    private void clearTable() {
        while (tableNhanVien.getRowCount() > 0) {
            modelNhanVien.removeRow(0);
        }
    }

//    load tên phòng ban vào cbxPhongBan
    private void loadDSPhongBanLenUI() {
        ArrayList<PhongBan> dsPhongBan = phongBanDAO.getAllPhongBan();
        cbxPhongBan.addItem("Chọn phòng ban");
        for (PhongBan phongBan : dsPhongBan) {
            cbxPhongBan.addItem(phongBan.getTenPB());
        }
    }

//    load danh sách tất cả nhân viên lên tableNhanVien
    private void loadDSNhanVienLenUI() {
        clearTable();
        int stt = 1;
        for (NhanVienHanhChinh nvhc : nvhcDAO.getNhanVienByTinhTrang(true)) {
            String gioiTinh = "Nữ";
            String tinhTrang = "Thôi Việc";
            if (nvhc.isPhai()) {
                gioiTinh = "Nam";
            }
            if (nvhc.isTinhTrang()) {
                tinhTrang = "Đang làm việc";
            }
            modelNhanVien.addRow(new Object[]{
                stt, nvhc.getMaNV(), nvhc.getHoTen(), gioiTinh, nvhc.getNgaySinh(), nvhc.getSoDT(), nvhc.getDiaChi(), tinhTrang, nvhc.getNgayVaoLam(), nvhc.getHeSoLuong(),
                dfTien.format(nvhc.getLuongCoBan()), nvhc.getChucVu(), nvhc.getEmail(), dfTien.format(nvhc.getTienPhuCapTheoNgay()), dfTien.format(nvhc.getTienChuyenCan()), nvhc.getPhongBan().getTenPB(), nvhc.getGhiChu()
            });
            stt++;
        }
    }

//    load danh sách nhân viên theo chức vụ
    private void loadDSNhanVienTheoChucVu() {
        clearTable();
        int stt = 1;
        String chucVu = cbxLocTheoCV.getSelectedItem().toString();
        boolean tTrang = Boolean.parseBoolean(cbxLocTheoTT.getSelectedItem().toString());
        if (cbxLocTheoTT.getSelectedItem().toString().equalsIgnoreCase("Đang làm việc")) {
            tTrang = true;
        }
        for (NhanVienHanhChinh nvhc : nvhcDAO.getNhanVienByChucVu(chucVu, tTrang)) {
            String gioiTinh = "Nữ";
            String tinhTrang = "Thôi Việc";
            if (nvhc.isPhai()) {
                gioiTinh = "Nam";
            }
            if (nvhc.isTinhTrang()) {
                tinhTrang = "Đang làm việc";
            }

            modelNhanVien.addRow(new Object[]{
                stt, nvhc.getMaNV(), nvhc.getHoTen(), gioiTinh, nvhc.getNgaySinh(), nvhc.getSoDT(), nvhc.getDiaChi(), tinhTrang, nvhc.getNgayVaoLam(), nvhc.getHeSoLuong(),
                dfTien.format(nvhc.getLuongCoBan()), nvhc.getChucVu(), nvhc.getEmail(), dfTien.format(nvhc.getTienPhuCapTheoNgay()), dfTien.format(nvhc.getTienChuyenCan()), nvhc.getPhongBan().getTenPB(), nvhc.getGhiChu()
            });
            stt++;
        }
    }

//    load danh sách nhân viên theo phòng ban
    private void loadDSNhanVienTheoPhongBan() {
        clearTable();
        int stt = 1;
        String tenPB = cbxLocTheoPB.getSelectedItem().toString();
        String chucVu = cbxLocTheoCV.getSelectedItem().toString();
        boolean tTrang = Boolean.parseBoolean(cbxLocTheoTT.getSelectedItem().toString());
        if (cbxLocTheoTT.getSelectedItem().toString().equalsIgnoreCase("Đang làm việc")) {
            tTrang = true;
        }
        for (NhanVienHanhChinh nvhc : nvhcDAO.getNhanVienByTenPB(tenPB, tTrang)) {
            String gioiTinh = "Nữ";
            String tinhTrang = "Thôi Việc";
            if (nvhc.isPhai()) {
                gioiTinh = "Nam";
            }
            if (nvhc.isTinhTrang()) {
                tinhTrang = "Đang làm việc";
            }

            modelNhanVien.addRow(new Object[]{
                stt, nvhc.getMaNV(), nvhc.getHoTen(), gioiTinh, nvhc.getNgaySinh(), nvhc.getSoDT(), nvhc.getDiaChi(), tinhTrang, nvhc.getNgayVaoLam(), nvhc.getHeSoLuong(),
                dfTien.format(nvhc.getLuongCoBan()), nvhc.getChucVu(), nvhc.getEmail(), dfTien.format(nvhc.getTienPhuCapTheoNgay()), dfTien.format(nvhc.getTienChuyenCan()), nvhc.getPhongBan().getTenPB(), nvhc.getGhiChu()
            });
            stt++;
        }
    }

//    load danh sách nhân viên theo mã hoặc số điện thoại
    private void loadDSNhanVienTheoMaHoacSDT() {
        clearTable();
        int stt = 1;
        String ttCanTim = txtTimTheoTTNV.getText().toLowerCase().trim();
        for (NhanVienHanhChinh nvhc : nvhcDAO.getMaVaSDTNhanVien(ttCanTim)) {
            String gioiTinh = "Nữ";
            String tinhTrang = "Thôi Việc";
            if (nvhc.isPhai()) {
                gioiTinh = "Nam";
            }
            if (nvhc.isTinhTrang()) {
                tinhTrang = "Đang làm việc";
            }

            modelNhanVien.addRow(new Object[]{
                stt, nvhc.getMaNV(), nvhc.getHoTen(), gioiTinh, nvhc.getNgaySinh(), nvhc.getSoDT(), nvhc.getDiaChi(), tinhTrang, nvhc.getNgayVaoLam(), nvhc.getHeSoLuong(),
                dfTien.format(nvhc.getLuongCoBan()), nvhc.getChucVu(), nvhc.getEmail(), dfTien.format(nvhc.getTienPhuCapTheoNgay()), dfTien.format(nvhc.getTienChuyenCan()), nvhc.getPhongBan().getTenPB(), nvhc.getGhiChu()
            });
            stt++;
        }
    }

//    load danh sách nhân viên theo tên
    private void loadDSNhanVienTheoTen() {
        clearTable();
        int stt = 1;
        String ttCanTim = txtTimTheoTTNV.getText().toLowerCase().trim();
        for (NhanVienHanhChinh nvhc : nvhcDAO.getNhanVienByTenNV(ttCanTim)) {
            String gioiTinh = "Nữ";
            String tinhTrang = "Thôi Việc";
            if (nvhc.isPhai()) {
                gioiTinh = "Nam";
            }
            if (nvhc.isTinhTrang()) {
                tinhTrang = "Đang làm việc";
            }

            modelNhanVien.addRow(new Object[]{
                stt, nvhc.getMaNV(), nvhc.getHoTen(), gioiTinh, nvhc.getNgaySinh(), nvhc.getSoDT(), nvhc.getDiaChi(), tinhTrang, nvhc.getNgayVaoLam(), nvhc.getHeSoLuong(),
                dfTien.format(nvhc.getLuongCoBan()), nvhc.getChucVu(), nvhc.getEmail(), dfTien.format(nvhc.getTienPhuCapTheoNgay()), dfTien.format(nvhc.getTienChuyenCan()), nvhc.getPhongBan().getTenPB(), nvhc.getGhiChu()
            });
            stt++;
        }
    }

//    load danh sách nhân viên theo tình trạng
    private void loadDSNhanVienTheoTinhTrang() {
        clearTable();
        int stt = 1;
        boolean tTrang = Boolean.parseBoolean(cbxLocTheoTT.getSelectedItem().toString());
        if (cbxLocTheoTT.getSelectedItem().toString().equalsIgnoreCase("Đang làm việc")) {
            tTrang = true;
        }
        for (NhanVienHanhChinh nvhc : nvhcDAO.getNhanVienByTinhTrang(tTrang)) {
            String gioiTinh = "Nữ";
            String tinhTrang = "Thôi Việc";
            if (nvhc.isPhai()) {
                gioiTinh = "Nam";
            }
            if (nvhc.isTinhTrang()) {
                tinhTrang = "Đang làm việc";
            }

            modelNhanVien.addRow(new Object[]{
                stt, nvhc.getMaNV(), nvhc.getHoTen(), gioiTinh, nvhc.getNgaySinh(), nvhc.getSoDT(), nvhc.getDiaChi(), tinhTrang, nvhc.getNgayVaoLam(), nvhc.getHeSoLuong(),
                dfTien.format(nvhc.getLuongCoBan()), nvhc.getChucVu(), nvhc.getEmail(), dfTien.format(nvhc.getTienPhuCapTheoNgay()), dfTien.format(nvhc.getTienChuyenCan()), nvhc.getPhongBan().getTenPB(), nvhc.getGhiChu()
            });
            stt++;
        }
    }
}
