/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import dao.CongDoan_DAO;
import dao.SanPham_DAO;
import entity.CongDoan;
import entity.SanPham;
import java.sql.Date;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.management.Query.and;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author acer
 */
public class GDQLCongDoan extends javax.swing.JPanel {

    private CongDoan_DAO congdoanDao;
    private DefaultTableModel modelCD;
    private DefaultComboBoxModel<String> modelcbbSP, modelcbbTCDT;
    private SanPham sanPham;
    private SanPham_DAO sanphamDao;

    /**
     * Creates new form GDQLCongDoan
     */
    public GDQLCongDoan() {
        initComponents();
        sanphamDao = new SanPham_DAO();
        String[] headerCD = {"STT", "Mã công đoạn", "Tên công đoạn", "Số lượng", "Đơn giá", "Ngày bắt đầu", "Ngày kết thúc", "Tên công đoạn trước", "Trạng thái"};
        modelCD = new DefaultTableModel(headerCD, 0);
        tableDSCD.setModel(modelCD);
        loadDanhSachCongDoan();
        loadSanPhamChuaCongDoan();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pQLCongDoan = new javax.swing.JPanel();
        pTittle = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        pTongQuan = new javax.swing.JPanel();
        pSanPham = new javax.swing.JPanel();
        lblMaSP = new javax.swing.JLabel();
        cbbMaSP = new javax.swing.JComboBox<>();
        lblTenSP = new javax.swing.JLabel();
        lblSoLuong = new javax.swing.JLabel();
        lblDVT = new javax.swing.JLabel();
        lblDonGia = new javax.swing.JLabel();
        lblSoCD = new javax.swing.JLabel();
        lblChatLieu = new javax.swing.JLabel();
        lblMaHD = new javax.swing.JLabel();
        lblThongTin = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JTextField();
        txtDonGia = new javax.swing.JTextField();
        txtSoCD = new javax.swing.JTextField();
        txtChatLieu = new javax.swing.JTextField();
        txtMaHD = new javax.swing.JTextField();
        txtDVT = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtThongTinSP = new javax.swing.JTextArea();
        pChiTietCD = new javax.swing.JPanel();
        lblMaCD = new javax.swing.JLabel();
        lblTenCD = new javax.swing.JLabel();
        lblSLCD = new javax.swing.JLabel();
        lblDonGiaCD = new javax.swing.JLabel();
        lblNgayBD = new javax.swing.JLabel();
        lblNgayKT = new javax.swing.JLabel();
        lblTenCDT = new javax.swing.JLabel();
        lblTrangThai = new javax.swing.JLabel();
        txtMaCD = new javax.swing.JTextField();
        txtTenCD = new javax.swing.JTextField();
        txtSLCD = new javax.swing.JTextField();
        txtDonGiaCD = new javax.swing.JTextField();
        cbbTenCDT = new javax.swing.JComboBox<>();
        cbbTrangThai = new javax.swing.JComboBox<>();
        ngayBD = new com.toedter.calendar.JDateChooser();
        ngayKT = new com.toedter.calendar.JDateChooser();
        pChucNang = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        btnNhapLai = new javax.swing.JButton();
        pDanhSachCD = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDSCD = new javax.swing.JTable();
        pTimKiemLoc = new javax.swing.JPanel();
        lblTimKiemCD = new javax.swing.JLabel();
        cbbTimKiemCD = new javax.swing.JComboBox<>();
        txtLocNgayBD = new javax.swing.JLabel();
        txtLocNgayKT = new javax.swing.JLabel();
        btnReload = new javax.swing.JButton();
        chooseNgayBD = new com.toedter.calendar.JDateChooser();
        chooseNgayKT = new com.toedter.calendar.JDateChooser();
        btnTimMaCD = new javax.swing.JButton();
        locTheoNgayBD = new javax.swing.JButton();
        locTheoNgayKT = new javax.swing.JButton();

        pQLCongDoan.setPreferredSize(new java.awt.Dimension(958, 735));

        pTittle.setBackground(new java.awt.Color(0, 0, 0));

        jLabel15.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(191, 95, 95));
        jLabel15.setText("QUẢN LÝ CÔNG ĐOẠN");

        javax.swing.GroupLayout pTittleLayout = new javax.swing.GroupLayout(pTittle);
        pTittle.setLayout(pTittleLayout);
        pTittleLayout.setHorizontalGroup(
            pTittleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTittleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pTittleLayout.setVerticalGroup(
            pTittleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        pTongQuan.setBackground(new java.awt.Color(204, 204, 204));
        pTongQuan.setForeground(new java.awt.Color(255, 255, 255));
        pTongQuan.setPreferredSize(new java.awt.Dimension(958, 735));

        pSanPham.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Thông tin sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N

        lblMaSP.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblMaSP.setText("Sản phẩm: ");

        cbbMaSP.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbbMaSP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "23100101", "23100102" }));
        cbbMaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbMaSPActionPerformed(evt);
            }
        });

        lblTenSP.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblTenSP.setText("Tên sản phẩm:");

        lblSoLuong.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblSoLuong.setText("Số lượng: ");

        lblDVT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblDVT.setText("Đơn vị tính:");

        lblDonGia.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblDonGia.setText("Đơn giá:");

        lblSoCD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblSoCD.setText("Số công đoạn:");

        lblChatLieu.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblChatLieu.setText("Chất liệu: ");

        lblMaHD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblMaHD.setText("Hợp đồng:");

        lblThongTin.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblThongTin.setText("Thông tin chi tiết: ");

        txtTenSP.setEditable(false);
        txtTenSP.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtTenSP.setEnabled(false);
        txtTenSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenSPActionPerformed(evt);
            }
        });

        txtSoLuong.setEditable(false);
        txtSoLuong.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtSoLuong.setEnabled(false);
        txtSoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoLuongActionPerformed(evt);
            }
        });

        txtDonGia.setEditable(false);
        txtDonGia.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtDonGia.setEnabled(false);
        txtDonGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDonGiaActionPerformed(evt);
            }
        });

        txtSoCD.setEditable(false);
        txtSoCD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtSoCD.setEnabled(false);

        txtChatLieu.setEditable(false);
        txtChatLieu.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtChatLieu.setEnabled(false);
        txtChatLieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChatLieuActionPerformed(evt);
            }
        });

        txtMaHD.setEditable(false);
        txtMaHD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtMaHD.setEnabled(false);
        txtMaHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaHDActionPerformed(evt);
            }
        });

        txtDVT.setEditable(false);
        txtDVT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtDVT.setEnabled(false);

        txtThongTinSP.setEditable(false);
        txtThongTinSP.setColumns(20);
        txtThongTinSP.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtThongTinSP.setRows(5);
        txtThongTinSP.setEnabled(false);
        jScrollPane2.setViewportView(txtThongTinSP);

        javax.swing.GroupLayout pSanPhamLayout = new javax.swing.GroupLayout(pSanPham);
        pSanPham.setLayout(pSanPhamLayout);
        pSanPhamLayout.setHorizontalGroup(
            pSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pSanPhamLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pSanPhamLayout.createSequentialGroup()
                        .addGroup(pSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblChatLieu)
                            .addGroup(pSanPhamLayout.createSequentialGroup()
                                .addGroup(pSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTenSP)
                                    .addComponent(lblSoLuong)
                                    .addComponent(lblDonGia))
                                .addGroup(pSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pSanPhamLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(pSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(pSanPhamLayout.createSequentialGroup()
                                                .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(25, 25, 25)
                                                .addGroup(pSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(pSanPhamLayout.createSequentialGroup()
                                                        .addGroup(pSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(lblSoCD)
                                                            .addComponent(lblDVT))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addGroup(pSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(txtSoCD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtDVT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGroup(pSanPhamLayout.createSequentialGroup()
                                                        .addComponent(lblMaHD)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(pSanPhamLayout.createSequentialGroup()
                                                .addGroup(pSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(txtDonGia, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                                                    .addComponent(txtChatLieu, javax.swing.GroupLayout.Alignment.LEADING))
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(pSanPhamLayout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addGroup(pSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbbMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(55, 55, 55))
                    .addGroup(pSanPhamLayout.createSequentialGroup()
                        .addComponent(lblMaSP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(pSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblThongTin)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        pSanPhamLayout.setVerticalGroup(
            pSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pSanPhamLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(pSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaSP)
                    .addComponent(cbbMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblThongTin))
                .addGroup(pSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pSanPhamLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTenSP)
                            .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(pSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSoLuong)
                            .addComponent(lblDVT)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDVT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDonGia)
                            .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSoCD)
                            .addComponent(txtSoCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblChatLieu)
                            .addGroup(pSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtChatLieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblMaHD)
                                .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(pSanPhamLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jScrollPane2)
                        .addContainerGap())))
        );

        pChiTietCD.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Chi tiết công đoạn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N

        lblMaCD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblMaCD.setText("Mã công đoạn:");

        lblTenCD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblTenCD.setText("Tên công đoạn: ");

        lblSLCD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblSLCD.setText("Số lượng: ");

        lblDonGiaCD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblDonGiaCD.setText("Đơn giá: ");

        lblNgayBD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblNgayBD.setText("Ngày bắt đầu: ");

        lblNgayKT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblNgayKT.setText("Ngày kết thúc: ");

        lblTenCDT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblTenCDT.setText("Tên công đoạn trước:");

        lblTrangThai.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblTrangThai.setText("Trạng thái: ");

        txtMaCD.setEditable(false);
        txtMaCD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtMaCD.setEnabled(false);
        txtMaCD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaCDActionPerformed(evt);
            }
        });

        txtTenCD.setEditable(false);
        txtTenCD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        txtSLCD.setEditable(false);
        txtSLCD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        txtDonGiaCD.setEditable(false);
        txtDonGiaCD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        cbbTenCDT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cbbTenCDT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn tên công đoạn trước", "Không", "Cắt", "May", "Vắt sổ", "Cắt chỉ" }));
        cbbTenCDT.setEnabled(false);

        cbbTrangThai.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cbbTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn trạng thái", "Chưa thực hiện", "Đang thực hiện", "Đã thực hiện" }));
        cbbTrangThai.setEnabled(false);

        ngayBD.setDateFormatString("yyyy-MM-dd");

        ngayKT.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout pChiTietCDLayout = new javax.swing.GroupLayout(pChiTietCD);
        pChiTietCD.setLayout(pChiTietCDLayout);
        pChiTietCDLayout.setHorizontalGroup(
            pChiTietCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChiTietCDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pChiTietCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pChiTietCDLayout.createSequentialGroup()
                        .addComponent(lblTenCD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addComponent(txtTenCD, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pChiTietCDLayout.createSequentialGroup()
                        .addComponent(lblMaCD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMaCD, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pChiTietCDLayout.createSequentialGroup()
                        .addComponent(lblSLCD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtSLCD, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pChiTietCDLayout.createSequentialGroup()
                        .addGroup(pChiTietCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTenCDT)
                            .addComponent(lblTrangThai))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pChiTietCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbbTenCDT, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pChiTietCDLayout.createSequentialGroup()
                                .addComponent(cbbTrangThai, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(9, 9, 9))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pChiTietCDLayout.createSequentialGroup()
                        .addGroup(pChiTietCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDonGiaCD)
                            .addComponent(lblNgayBD))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pChiTietCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pChiTietCDLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(ngayBD, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtDonGiaCD, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pChiTietCDLayout.createSequentialGroup()
                        .addComponent(lblNgayKT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ngayKT, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pChiTietCDLayout.setVerticalGroup(
            pChiTietCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChiTietCDLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(pChiTietCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaCD)
                    .addComponent(txtMaCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pChiTietCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTenCD)
                    .addComponent(txtTenCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pChiTietCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSLCD)
                    .addComponent(txtSLCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pChiTietCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDonGiaCD)
                    .addComponent(txtDonGiaCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pChiTietCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNgayBD)
                    .addComponent(ngayBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pChiTietCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pChiTietCDLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(lblNgayKT))
                    .addGroup(pChiTietCDLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ngayKT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pChiTietCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTenCDT)
                    .addComponent(cbbTenCDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pChiTietCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTrangThai)
                    .addComponent(cbbTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pChucNang.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 102), 2));
        pChucNang.setPreferredSize(new java.awt.Dimension(393, 120));

        btnThem.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnCapNhat.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnCapNhat.setText("Cập nhật");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnLuu.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnNhapLai.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnNhapLai.setText("Nhập lại");
        btnNhapLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapLaiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pChucNangLayout = new javax.swing.GroupLayout(pChucNang);
        pChucNang.setLayout(pChucNangLayout);
        pChucNangLayout.setHorizontalGroup(
            pChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChucNangLayout.createSequentialGroup()
                .addGroup(pChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pChucNangLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(btnThem)
                        .addGap(43, 43, 43)
                        .addComponent(btnXoa)
                        .addGap(47, 47, 47)
                        .addComponent(btnCapNhat))
                    .addGroup(pChucNangLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(btnLuu)
                        .addGap(39, 39, 39)
                        .addComponent(btnNhapLai)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        pChucNangLayout.setVerticalGroup(
            pChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChucNangLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnXoa)
                    .addComponent(btnCapNhat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLuu)
                    .addComponent(btnNhapLai))
                .addGap(25, 25, 25))
        );

        pDanhSachCD.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Danh sách công đoạn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N

        tableDSCD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã công đoạn", "Tên công đoạn", "Số lượng", "Đơn giá", "Ngày bắt đầu", "Ngày kết thúc", "Tên công đoạn trước", "Trạng thái"
            }
        ));
        tableDSCD.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tableDSCD.setRowHeight(30);
        tableDSCD.setShowGrid(true);
        tableDSCD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDSCDMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableDSCD);

        javax.swing.GroupLayout pDanhSachCDLayout = new javax.swing.GroupLayout(pDanhSachCD);
        pDanhSachCD.setLayout(pDanhSachCDLayout);
        pDanhSachCDLayout.setHorizontalGroup(
            pDanhSachCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
        );
        pDanhSachCDLayout.setVerticalGroup(
            pDanhSachCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        lblTimKiemCD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblTimKiemCD.setText("Tìm kiếm theo mã công đoạn: ");

        cbbTimKiemCD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cbbTimKiemCD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtLocNgayBD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtLocNgayBD.setText("Lọc theo Ngày bắt đầu: ");

        txtLocNgayKT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtLocNgayKT.setText("Lọc theo ngày kết thúc:");

        btnReload.setBackground(new java.awt.Color(255, 102, 102));
        btnReload.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnReload.setText("Reload");
        btnReload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadActionPerformed(evt);
            }
        });

        btnTimMaCD.setText("Tìm");

        locTheoNgayBD.setText("Lọc");

        locTheoNgayKT.setText("Lọc");

        javax.swing.GroupLayout pTimKiemLocLayout = new javax.swing.GroupLayout(pTimKiemLoc);
        pTimKiemLoc.setLayout(pTimKiemLocLayout);
        pTimKiemLocLayout.setHorizontalGroup(
            pTimKiemLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTimKiemLocLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pTimKiemLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pTimKiemLocLayout.createSequentialGroup()
                        .addComponent(lblTimKiemCD)
                        .addGap(26, 26, 26)
                        .addComponent(cbbTimKiemCD, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pTimKiemLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pTimKiemLocLayout.createSequentialGroup()
                            .addComponent(txtLocNgayKT)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(chooseNgayKT, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(locTheoNgayKT, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pTimKiemLocLayout.createSequentialGroup()
                            .addComponent(txtLocNgayBD)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(chooseNgayBD, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(locTheoNgayBD, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(pTimKiemLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pTimKiemLocLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnTimMaCD)
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(pTimKiemLocLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReload, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pTimKiemLocLayout.setVerticalGroup(
            pTimKiemLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTimKiemLocLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(pTimKiemLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTimKiemCD)
                    .addComponent(cbbTimKiemCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimMaCD))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pTimKiemLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pTimKiemLocLayout.createSequentialGroup()
                        .addComponent(locTheoNgayBD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addGroup(pTimKiemLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(locTheoNgayKT)
                            .addComponent(btnReload)))
                    .addGroup(pTimKiemLocLayout.createSequentialGroup()
                        .addGroup(pTimKiemLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtLocNgayBD)
                            .addComponent(chooseNgayBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(pTimKiemLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtLocNgayKT)
                            .addComponent(chooseNgayKT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout pTongQuanLayout = new javax.swing.GroupLayout(pTongQuan);
        pTongQuan.setLayout(pTongQuanLayout);
        pTongQuanLayout.setHorizontalGroup(
            pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTongQuanLayout.createSequentialGroup()
                .addGroup(pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pDanhSachCD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pTimKiemLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pChiTietCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(405, Short.MAX_VALUE))
            .addGroup(pTongQuanLayout.createSequentialGroup()
                .addComponent(pSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pTongQuanLayout.setVerticalGroup(
            pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTongQuanLayout.createSequentialGroup()
                .addComponent(pSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pTongQuanLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(pTimKiemLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pDanhSachCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pTongQuanLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pChiTietCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pQLCongDoanLayout = new javax.swing.GroupLayout(pQLCongDoan);
        pQLCongDoan.setLayout(pQLCongDoanLayout);
        pQLCongDoanLayout.setHorizontalGroup(
            pQLCongDoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pTittle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pTongQuan, javax.swing.GroupLayout.DEFAULT_SIZE, 1363, Short.MAX_VALUE)
        );
        pQLCongDoanLayout.setVerticalGroup(
            pQLCongDoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pQLCongDoanLayout.createSequentialGroup()
                .addComponent(pTittle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pTongQuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1363, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pQLCongDoan, javax.swing.GroupLayout.DEFAULT_SIZE, 1363, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 791, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pQLCongDoan, javax.swing.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTenSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenSPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenSPActionPerformed

    private void txtSoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoLuongActionPerformed

    private void txtDonGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDonGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDonGiaActionPerformed

    private void txtChatLieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChatLieuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChatLieuActionPerformed

    private void txtMaHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaHDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaHDActionPerformed

    private void btnReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadActionPerformed
        // TODO add your handling code here:
        Object o = evt.getSource();
        if (o.equals(btnReload)) {
            btnThem.setText("Thêm");
            cbbTimKiemCD.setSelectedItem("Chọn công đoạn");
            loadDanhSachCongDoan();
        }
    }//GEN-LAST:event_btnReloadActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        if (btnXoa.getText().equalsIgnoreCase("Xóa")) {
            int row = tableDSCD.getSelectedRow();
            if (row < 0) {
                JOptionPane.showMessageDialog(null, "Vui lòng chọn công đoạn cần xóa thông tin");
            } else {
                int option = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa công đoạn này?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);

                if (option == JOptionPane.YES_OPTION) {
                    setTrangThaiTextField();
                    try {
                        deleteCongDoan();
                    } catch (SQLException ex) {
                        Logger.getLogger(GDQLCongDoan.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    btnThem.setEnabled(false);
                    btnXoa.setText("Hủy");
                }
            }
        } else {
            setTrangThaiTextField();
            btnThem.setEnabled(true);
            btnXoa.setText("Xóa");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnNhapLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapLaiActionPerformed
        // TODO add your handling code here:
        nhapLai();

    }//GEN-LAST:event_btnNhapLaiActionPerformed

    //    làm mới các trường thông tin nhân viên
    private void nhapLai() {
        txtTenCD.setText("");
        txtSLCD.setText("");
        txtDonGiaCD.setText("");
        cbbTenCDT.setSelectedItem("Chọn TCDT");
        cbbTrangThai.setSelectedItem("Chọn trạng thái ");
        txtTenCD.requestFocus();
//        cbbMaSP.setSelectedIndex(0);
//        txtTenSP.setText("");
//        txtSoLuong.setText("");
//        txtDonGia.setText("");
//        txtChatLieu.setText("");
//        txtSoCD.setText("");
//        txtThongTinSP.setText("");
//        txtDVT.setText("");
//        txtMaHD.setText("");
    }

    private void clearTable() {
        while (tableDSCD.getRowCount() > 0) {
            modelCD.removeRow(0);
        }
    }


    private void tableDSCDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDSCDMouseClicked
        // TODO add your handling code here:

        int row = tableDSCD.getSelectedRow();
        txtMaCD.setText(modelCD.getValueAt(row, 1).toString());
        txtTenCD.setText(modelCD.getValueAt(row, 2).toString());
        txtSLCD.setText(modelCD.getValueAt(row, 3).toString());
        txtDonGiaCD.setText(modelCD.getValueAt(row, 4).toString());
        ngayBD.setDate((Date) modelCD.getValueAt(row, 5));
        ngayKT.setDate((Date) modelCD.getValueAt(row, 6));
        cbbTenCDT.setSelectedItem(modelCD.getValueAt(row, 7).toString());
        cbbTrangThai.setSelectedItem(modelCD.getValueAt(row, 8).toString());

//        String maSP = modelCD.getValueAt(row, 1).toString().substring(0,8);
//        SanPham sp = sanphamDao.getSanPhamTheoMa(maSP);
//        loadTextFielSanPham(sp);
    }//GEN-LAST:event_tableDSCDMouseClicked

    private void cbbMaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbMaSPActionPerformed
        String maSP = modelcbbSP.getSelectedItem().toString().substring(0, 8);
        SanPham sp = sanphamDao.getSanPhamTheoMa(maSP);
        txtTenSP.setText(sp.getTenSP());
        txtSoLuong.setText(Integer.toString(sp.getSoLuong()));
        txtDVT.setText(sp.getDonViTinh());
        txtDonGia.setText(Double.toString(sp.getDonGia()));
        txtSoCD.setText(Integer.toString(sp.getSoCongDoan()));
        txtChatLieu.setText(sp.getChatLieu());
        txtMaHD.setText(sp.getHopDong().getMaHD());
        txtThongTinSP.setText(sp.getThongTin());
        maCD();
    }//GEN-LAST:event_cbbMaSPActionPerformed

    private void txtMaCDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaCDActionPerformed
        // TODO add your handling code here:      
    }//GEN-LAST:event_txtMaCDActionPerformed
    private void maCD() {
        if (!cbbMaSP.getSelectedItem().toString().equals("Chọn sản phẩm")) {
            String maSP = cbbMaSP.getSelectedItem().toString().trim();
            maSP = maSP.length() > 8 ? maSP.substring(0, 8) : maSP;
            int soLuongCDTrongSP = 1;
            for (CongDoan cd : new CongDoan_DAO().getAllCongDoan()) {
                if (cd.getSanPham().getMaSP().equalsIgnoreCase(maSP)) {
                    soLuongCDTrongSP++;
                }
            }
            for (SanPham sp : sanphamDao.getSanPhamByMaSP(maSP)) {
                if (soLuongCDTrongSP > sp.getSoCongDoan()) {
                    JOptionPane.showMessageDialog(this, "Sản phẩm đã đủ số công đoạn!! \nVui lòng chọn sản phẩm khác");
                } else {
                    txtMaCD.setText(maSP + ((soLuongCDTrongSP < 10) ? "0" + soLuongCDTrongSP : soLuongCDTrongSP));
                }
            }
        }
    }
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        Object o = evt.getSource();
        if (o.equals(btnThem)) {
            if (btnThem.getText().equals("Thêm")) {

                nhapLai();
                txtTenCD.setEditable(true);
                txtSLCD.setEditable(true);
                txtDonGiaCD.setEditable(true);
                cbbTenCDT.setEnabled(true);
                cbbTrangThai.setEnabled(true);
                btnThem.setText("Hủy");
                btnLuu.setEnabled(true);
                btnCapNhat.setEnabled(false);
            } else {
                nhapLai();
                txtTenCD.setEditable(true);
                txtSLCD.setEditable(true);
                txtDonGiaCD.setEditable(true);
                cbbTenCDT.setEnabled(true);
                cbbTrangThai.setEnabled(true);
                btnThem.setText("Thêm");
                btnLuu.setEnabled(true);
                btnCapNhat.setEnabled(false);
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        // TODO add your handling code here:
        if (btnCapNhat.getText().equalsIgnoreCase("Cập nhật")) {
            int row = tableDSCD.getSelectedRow();
            if (row < 0) {
                JOptionPane.showMessageDialog(null, "Vui lòng chọn công đoạn cần sửa thông tin");
            } else {
                setTrangThaiTextField();
                btnThem.setEnabled(false);
                btnCapNhat.setText("Hủy");
            }
        } else {
            setTrangThaiTextField();
            btnThem.setEnabled(true);
            btnCapNhat.setText("Cập nhật");
        }
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        // TODO add your handling code here:
        Object o = evt.getSource();
        if (o.equals(btnLuu)) {
            if (btnThem.getText().equalsIgnoreCase("Hủy")) {
                addCongDoan();
            } else if (btnCapNhat.getText().equalsIgnoreCase("Hủy")) {
                updateCongDoan();
            }
        }


    }//GEN-LAST:event_btnLuuActionPerformed
    public void setTrangThaiTextField() {
        if (txtMaCD.isEditable()) {
            txtTenCD.setEditable(false);
            txtSLCD.setEditable(false);
            txtDonGiaCD.setEditable(false);
            cbbTenCDT.setVisible(false);
            cbbTrangThai.setVisible(false);
        } else {
            txtTenCD.setEditable(true);
            txtSLCD.setEditable(true);
            txtDonGiaCD.setEditable(true);
            cbbTenCDT.setVisible(true);
            cbbTrangThai.setVisible(true);
        }
    }

    public void addCongDoan() {
        String maCD = txtMaCD.getText().trim();
        String tenCD = txtTenCD.getText().trim();
        int soLuongCD = Integer.parseInt(txtSLCD.getText());
        double donGiaCD = Double.parseDouble(txtDonGiaCD.getText());
        Date ngayBD = new Date(this.ngayBD.getDate().getYear(), this.ngayBD.getDate().getMonth(), this.ngayBD.getDate().getDay());
        Date ngayKT = new Date(this.ngayKT.getDate().getYear(), this.ngayKT.getDate().getMonth(), this.ngayKT.getDate().getDay());
        String tenCDT = cbbTenCDT.getSelectedItem().toString();
        int trangThai;
        if (cbbTrangThai.getSelectedItem().toString().equalsIgnoreCase("Chưa thực hiện")) {
            trangThai = 1;
        } else if (cbbTrangThai.getSelectedItem().toString().equalsIgnoreCase("Đang thực hiện")) {
            trangThai = 2;
        } else {
            trangThai = 3;
        }

        SanPham sp = new SanPham(cbbMaSP.getSelectedItem().toString().substring(0, 8));
        CongDoan cd = new CongDoan(maCD, tenCD, soLuongCD, donGiaCD, ngayBD, ngayKT, tenCDT, trangThai, sp);
        if (congdoanDao.createCongDoan(cd)) {
            nhapLai();
            setTrangThaiTextField();
            loadDanhSachCongDoan();
            JOptionPane.showMessageDialog(null, "Thêm công đoạn thành công");
            btnThem.setText("Thêm");
            btnCapNhat.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(null, "Thêm công đoạn không thành công");
        }

    }

    private void updateCongDoan() {

        String maCD = txtMaCD.getText().trim();
        String tenCD = txtTenCD.getText().trim();
        int soLuongCD = Integer.parseInt(txtSLCD.getText().toString().trim());
        double donGiaCD = Double.parseDouble(txtDonGiaCD.getText());
        Date ngayBD = new Date(this.ngayBD.getDate().getYear(), this.ngayBD.getDate().getMonth(), this.ngayBD.getDate().getDay());
        Date ngayKT = new Date(this.ngayKT.getDate().getYear(), this.ngayKT.getDate().getMonth(), this.ngayKT.getDate().getDay());
        String tenCDT = cbbTenCDT.getSelectedItem().toString();
        int trangThai;
        if (cbbTrangThai.getSelectedItem().toString().equalsIgnoreCase("Chưa thực hiện")) {
            trangThai = 1;
        } else if (cbbTrangThai.getSelectedItem().toString().equalsIgnoreCase("Đang thực hiện")) {
            trangThai = 2;
        } else {
            trangThai = 3;
        }

        CongDoan congdoan = congdoanDao.getCongDoanTheoMa(maCD);
        SanPham sp = sanphamDao.getSanPhamTheoMa(modelCD.getValueAt(tableDSCD.getSelectedRow(), 1).toString().substring(0, 8).trim());
        CongDoan cd = new CongDoan(maCD, tenCD, soLuongCD, donGiaCD, ngayBD, ngayKT, tenCDT, trangThai, sp);

        if (congdoanDao.updateCongDoan(cd)) {
            nhapLai();
            setTrangThaiTextField();
            btnCapNhat.setText("Cập nhật");
            btnThem.setEnabled(true);
            modelCD.setRowCount(0);
            loadDanhSachCongDoan();

        } else {
            JOptionPane.showMessageDialog(null, "Sửa thông tin công đoạn không thành công");
        }

    }

    private void deleteCongDoan() throws SQLException {
        String maCD = txtMaCD.getText().trim();
        CongDoan congdoan = congdoanDao.getCongDoanTheoMa(maCD);
        if (congdoan != null) {

            if (congdoanDao.xoaCongDoan(maCD)) {
                nhapLai();
                setTrangThaiTextField();
                btnCapNhat.setText("Cập nhật");
                btnThem.setEnabled(true);
                modelCD.setRowCount(0);
                loadDanhSachCongDoan();
            } else {
                JOptionPane.showMessageDialog(null, "Xóa công đoạn không thành công");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Không tìm thấy công đoạn cần xóa");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnNhapLai;
    private javax.swing.JButton btnReload;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimMaCD;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbbMaSP;
    private javax.swing.JComboBox<String> cbbTenCDT;
    private javax.swing.JComboBox<String> cbbTimKiemCD;
    private javax.swing.JComboBox<String> cbbTrangThai;
    private com.toedter.calendar.JDateChooser chooseNgayBD;
    private com.toedter.calendar.JDateChooser chooseNgayKT;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblChatLieu;
    private javax.swing.JLabel lblDVT;
    private javax.swing.JLabel lblDonGia;
    private javax.swing.JLabel lblDonGiaCD;
    private javax.swing.JLabel lblMaCD;
    private javax.swing.JLabel lblMaHD;
    private javax.swing.JLabel lblMaSP;
    private javax.swing.JLabel lblNgayBD;
    private javax.swing.JLabel lblNgayKT;
    private javax.swing.JLabel lblSLCD;
    private javax.swing.JLabel lblSoCD;
    private javax.swing.JLabel lblSoLuong;
    private javax.swing.JLabel lblTenCD;
    private javax.swing.JLabel lblTenCDT;
    private javax.swing.JLabel lblTenSP;
    private javax.swing.JLabel lblThongTin;
    private javax.swing.JLabel lblTimKiemCD;
    private javax.swing.JLabel lblTrangThai;
    private javax.swing.JButton locTheoNgayBD;
    private javax.swing.JButton locTheoNgayKT;
    private com.toedter.calendar.JDateChooser ngayBD;
    private com.toedter.calendar.JDateChooser ngayKT;
    private javax.swing.JPanel pChiTietCD;
    private javax.swing.JPanel pChucNang;
    private javax.swing.JPanel pDanhSachCD;
    private javax.swing.JPanel pQLCongDoan;
    private javax.swing.JPanel pSanPham;
    private javax.swing.JPanel pTimKiemLoc;
    private javax.swing.JPanel pTittle;
    private javax.swing.JPanel pTongQuan;
    private javax.swing.JTable tableDSCD;
    private javax.swing.JTextField txtChatLieu;
    private javax.swing.JTextField txtDVT;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtDonGiaCD;
    private javax.swing.JLabel txtLocNgayBD;
    private javax.swing.JLabel txtLocNgayKT;
    private javax.swing.JTextField txtMaCD;
    private javax.swing.JTextField txtMaHD;
    private javax.swing.JTextField txtSLCD;
    private javax.swing.JTextField txtSoCD;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenCD;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextArea txtThongTinSP;
    // End of variables declaration//GEN-END:variables

    private void loadDanhSachCongDoan() {
        clearTable();
        int stt = 1;
        congdoanDao = new CongDoan_DAO();
        ArrayList<CongDoan> dsCongDoan = congdoanDao.getAllCongDoan();
        for (CongDoan cd : dsCongDoan) {
            String trangThai = "Chưa thực hiện";
            if (cd.getTrangThai() == 2) {
                trangThai = "Đang thực hiện";
            } else if (cd.getTrangThai() == 3) {
                trangThai = "Đã thực hiện";
            }
            modelCD.addRow(new Object[]{
                stt, cd.getMaCD(), cd.getTenCD(), cd.getSoLuong(), cd.getDonGia(), cd.getNgayBatDau(), cd.getNgayKetThuc(), cd.getTenCDTruoc(), trangThai
            });
            stt++;
        }
    }

    private void loadSanPhamChuaCongDoan() {
        modelcbbSP = new DefaultComboBoxModel<>();
        modelcbbSP.addElement("Chọn sản phẩm");
        for (SanPham sp : sanphamDao.getAllSanPham()) {
            modelcbbSP.addElement("" + sp.getMaSP() + " - " + sp.getTenSP());
        }
        cbbMaSP.setModel(modelcbbSP);
    }

    private void loadTextFielSanPham(SanPham sp) {
        txtTenSP.setText(sp.getTenSP());
        txtSoLuong.setText(sp.getSoLuong() + "");
        txtDonGia.setText(sp.getDonGia() + "");
        txtChatLieu.setText(sp.getChatLieu());
        txtDVT.setText(sp.getDonViTinh());
        txtSoCD.setText(sp.getSoCongDoan() + "");
        txtMaHD.setText(sp.getHopDong().getMaHD());
        cbbMaSP.setSelectedItem(sp.getMaSP() + " - " + sp.getTenSP());
    }

}
